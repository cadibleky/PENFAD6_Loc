
@using PENFAD6DAL.Repository.Setup.SystemSetup

    
    @model IEnumerable<setup_CountryRepo>
    @{
        var country = new setup_CountryRepo();
        var x = Html.X();
    }
    @(x.FormPanel()
                        .ID("country")
                        .ColumnWidth(0.6)
                        .Title("Setup Country")
                        .Frame(true)
                        .Closable(true)
                        .Layout(LayoutType.Column)
                        .MarginSpec("0 0 0 0")
                        .Width(850)
                        .Height(550)
                        .FieldDefaults(fd =>
                        {
                            fd.LabelAlign = LabelAlign.Top;
                            fd.MsgTarget = MessageTarget.Side;
                        })

                        .Items(

                                x.GridPanel()
                                        .ID("countryGrid")
                                        .Title("View Country List")
                                        .Frame(true)
                                        .Width(510)
                                        .MarginSpec("10 0 0 10")
                                        .Height(500)
                                        .Store(
                                            x.Store()
                                                .AutoLoad(true)
                                                .ID("countryStore")
                                        .DataSource(Model)
                                        .Model(
                                            x.Model()
                                                .Fields(
                                                    x.ModelField().Name("Country_ID").Type(ModelFieldType.String),
                                                    x.ModelField().Name("Country_Name").Type(ModelFieldType.String),
                                                    x.ModelField().Name("Country_Code").Type(ModelFieldType.String),
                                                    x.ModelField().Name("Nationality").Type(ModelFieldType.String)
                                                    )
                                        )
                                        .ServerProxy(
                                                Html.X().AjaxProxy()
                                                .Url(Url.Action("Read"))
                                        )
                                        .PageSize(10)
                                )
                                .Refresh()
                                .BottomBar(
                                    Html.X().PagingToolbar()
                                )
                                .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { this.up('form').getForm().loadRecord(selected[0]);}")
                                .ColumnModel(x.Column().DataIndex("COUNTRY_ID").Text("COUNTRY ID").Width(0))
                                .ColumnModel(x.Column().DataIndex("Country_Name").Text("COUNTRY NAME").Width(150))
                                .ColumnModel(x.Column().DataIndex("Country_Code").Text("COUNTRY CODE").Width(130))
                                .ColumnModel(x.Column().DataIndex("Nationality").Text("NATIONALITY").Width(150)),

                x.FieldSet()
                //.ColumnWidth(0.4)
                .Collapsible(true)
                .Width(400)
                .Height(510)
                .Title("Add/Edit Country")
                .MarginSpec("0 0 0 10")
                .Defaults(dd =>
                { dd.Add(new Parameter("LabelWidth", "115")); })

                .Items(
                    x.Hidden().Name("Country_ID"),

                    x.TextField()
                        .Name("Country_Name")
                        .Width(290)
                        .FieldLabel("COUNTRY")
                            .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                        .AllowBlank(false)
                        .BlankText("'COUNTRY' is required."),

                            x.TextField()
                        .Name("Country_Code")
                        .Width(290)
                            .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                        .FieldLabel("COUNTRY CODE")
                        .AllowBlank(false)
                        .BlankText("'COUNTRY CODE' is required."),

                            x.TextField()
                        .Name("Nationality")
                        .Width(290)
                            .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                        .FieldLabel("NATIONALITY")
                        .AllowBlank(false)
                        .BlankText("'NATIONALITY' is required.")
                    )

                .Items(
                    x.Button()
                    .ID("SU")
                        .Text("Save")
                        .Width(110)
                        .Icon(Icon.Add)
                        .DirectEvents(de =>
                        {
                            de.Click.Url = Url.Action("SaveRecord");

                        }).MarginSpec("20 10 0 0"),
                            x.Button()
                        .Text("Delete")
                        .Width(110)
                .Icon(Icon.Delete)
                .DirectEvents(de =>
                {
                    de.Click.Url = Url.Action("DeleteRecord");
                    de.Click.Confirmation.ConfirmRequest = true;
                    de.Click.Confirmation.Title = "Delete Record";
                    de.Click.Confirmation.Message = "Are you sure you want to delete?";
                }).MarginSpec("20 10 0 0"),

            x.Button()
                .Text("Clear")
                .Width(90)
                .Icon(Icon.ArrowRefresh)
                .OnClientClick("this.up('form').getForm().reset();")
                .MarginSpec("20 10 0 0")

        )
    )
)

















