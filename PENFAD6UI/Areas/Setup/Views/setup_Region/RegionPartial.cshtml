
@using PENFAD6DAL.Repository.Setup.SystemSetup

@model IEnumerable<setup_RegionRepo>

@{
    //var region = new setup_RegionRepo();
    var CountryRepo = new setup_CountryRepo();
    var x = Html.X();
}

@(x.FormPanel()
            .ID("region")
            .ColumnWidth(0.6)
            .Title("Setup Region")
            .Frame(true)
            .Closable(true)
            .Layout(LayoutType.Column)
            .MarginSpec("0 0 0 0")
            .Width(850)
            .Height(550)
            .FieldDefaults(fd =>
            {
                fd.LabelAlign = LabelAlign.Top;
                fd.MsgTarget = MessageTarget.Side;
            })

            .Items(

                    x.GridPanel()
                            .ID("regionGrid")

                            .Title("View Region List")
                            .Frame(true)
                            .Width(510)
                            .MarginSpec("10 0 0 10")
                            .Height(500)
                            .Store(
                                x.Store()
                                    .AutoLoad(true)
                                    .ID("regionStore")
                            .DataSource(Model)
                            .Model(
                                x.Model()
                                    .Fields(
                                        x.ModelField().Name("Region_ID").Type(ModelFieldType.String),
                                        x.ModelField().Name("Region_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Country_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Country_ID").Type(ModelFieldType.String)
                                        )

                            )
                            .ServerProxy(
                                   Html.X().AjaxProxy()
                                   .Url(Url.Action("Read"))
                                  )

                            .PageSize(10)
                    )
                    .Refresh()
                    .BottomBar(
                        Html.X().PagingToolbar()
                    )
                    .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { this.up('form').getForm().loadRecord(selected[0]); }")
                    .ColumnModel(x.Column().DataIndex("Region_ID").Text("REGION ID").Width(0))
                    .ColumnModel(x.Column().DataIndex("Country_ID").Text("COUNTRY ID").Width(0))
                    .ColumnModel(x.Column().DataIndex("Region_Name").Text("REGION").Width(170))
                    .ColumnModel(x.Column().DataIndex("Country_Name").Text("COUNTRY").Width(170)),

                    x.FieldSet()
                        //.ColumnWidth(0.4)
                        .Collapsible(true)
                          .WidthSpec("auto")
                            .Height(510)
                        .Title("Add/Edit Region")
                        .MarginSpec("0 0 0 10")
                        .Defaults(dd =>
                        { dd.Add(new Parameter("LabelWidth", "115")); })

                        .Items(
                            x.Hidden().Name("Region_ID"),

                            x.TextField()
                                .Name("Region_Name")
                                .Width(290)
                                .FieldLabel("REGION NAME")
                                .AllowBlank(false)
                                .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                .BlankText("Region is required."),


                              x.ComboBox().Name("Country_ID")
                                                    .FieldLabel("COUNTRY")
                                                    .MarginSpec("0 20 8 0").TabIndex(5).Width(290)
                                                    .AllowBlank(false)
                                                    .BlankText("Country is required.").Items(CountryRepo.GetCountryList().Select(d => new ListItem(d.Country_Name, d.Country_ID)))
                            )

                        .Items(
                            x.Button()
                                .Text("Save")
                                .Width(110)
                                .Icon(Icon.Add)
                                .DirectEvents(de =>
                                {
                                    de.Click.Url = Url.Action("SaveRecord");

                                }).MarginSpec("20 10 0 0"),
                            x.Button()
                                .Text("Delete")
                                .Width(110)
                                .Icon(Icon.Delete)
                                .DirectEvents(de =>
                                {
                                    de.Click.Url = Url.Action("DeleteRecord");
                                    de.Click.Confirmation.ConfirmRequest = true;
                                    de.Click.Confirmation.Title = "Delete Record";
                                    de.Click.Confirmation.Message = "Are you sure you want to delete?";
                                }).MarginSpec("20 10 0 0"),



                            x.Button()
                                .Text("Clear")
                                .Width(90)
                                .Icon(Icon.ArrowRefresh)
                                .OnClientClick("this.up('form').getForm().reset();")
                                .MarginSpec("20 10 0 0")
                        )
                )
)

















