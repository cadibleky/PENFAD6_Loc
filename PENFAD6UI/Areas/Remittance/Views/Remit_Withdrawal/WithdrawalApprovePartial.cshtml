
@using PENFAD6DAL.Repository.Remittance.Contribution
@using PENFAD6DAL.Repository.Setup.PfmSetup
@using PENFAD6DAL.Repository.CRM.Employer


@model IEnumerable<Remit_PurchaseRepo>

@{
    var ES = new crm_EmployerSchemeRepo();
    var scheme = new pfm_SchemeRepo();
    var employer = new crm_EmployerRepo();
    var x = Html.X();
}

<script>

        var onSuccess = function (grid, data) {
            grid.show();
            grid.getStore().loadData(data);
        };

</script>

@(x.FormPanel()
						.ID("frmWithdrawalApproveP_Main")
						.Title("Approve Benefits Payment Request")
						.Frame(true)
						.Closable(true)
						.AutoScroll(true)
						.MarginSpec("0 0 0 0")
						.Width(1000)
						.Height(1200)
						.FieldDefaults(fd =>
						{
							fd.LabelAlign = LabelAlign.Top;
							fd.MsgTarget = MessageTarget.Side;
						})
						.Items(


									x.FieldSet()
									.Height(1200)
									.Width(1600)
									.Frame(true)
									.Layout(LayoutType.Column)
									.MarginSpec("0 0 0 10")
									.Defaults(dd =>
									{ dd.Add(new Parameter("LabelWidth", "115")); })

									.Items(

									 x.FieldSet()
									.MarginSpec("5 0 0 0")
									.Width(800)
									.Height(1010)
									.Defaults(dd =>
									{ dd.Add(new Parameter("LabelWidth", "115")); })

									.Items(

									x.Button()
									.Text("View Pending Request")
									.Icon(Icon.ArrowRefresh)
									.MarginSpec("5 0 5 10")
									.Width(240)
									.DirectEvents(de =>
									{
										de.Click.Url = Url.Action("ReadWithdrawalPending");
										de.Click.Success = "onSuccess(App.WithdrawalBenefitApprove_Grid, result.data);";
									}),

									x.GridPanel()
									.ID("WithdrawalBenefitApprove_Grid")
									.Title("List of Pending Benefit Request")
									.Frame(true)
									.Width(790)
									.Height(1000)
									.MarginSpec("10 0 0 10")
									.Plugins(
									x.FilterHeader()
										)
									.Store(
									x.Store()
									.AutoLoad(true)
									.ID("ApproveRequestWithStore")
									.Model(
									x.Model()
									.Fields(
										x.ModelField().Name("Withdrawal_No").Type(ModelFieldType.String),
										x.ModelField().Name("Scheme_Id").Type(ModelFieldType.String),
										x.ModelField().Name("Fund_Id").Type(ModelFieldType.String),
										x.ModelField().Name("Total_Unit_Balance").Type(ModelFieldType.Float),
										x.ModelField().Name("Total_Con_Balance").Type(ModelFieldType.Float),
										x.ModelField().Name("Scheme_Fund_Id").Type(ModelFieldType.String),
										x.ModelField().Name("ESF_Id").Type(ModelFieldType.String),
										x.ModelField().Name("Employee_Name").Type(ModelFieldType.String),
										x.ModelField().Name("Scheme_Name").Type(ModelFieldType.String),
										x.ModelField().Name("Fund_Name").Type(ModelFieldType.String),
										x.ModelField().Name("Employee_Con_Balance").Type(ModelFieldType.Float),
										x.ModelField().Name("Employer_Con_Balance").Type(ModelFieldType.Float),
										x.ModelField().Name("Employee_Unit_Balance").Type(ModelFieldType.Float),
										x.ModelField().Name("Employer_Unit_Balance").Type(ModelFieldType.Float),
										x.ModelField().Name("Unit_Price").Type(ModelFieldType.Float),
										x.ModelField().Name("Total_Benefit").Type(ModelFieldType.Float),
										x.ModelField().Name("Trans_Request_Date").Type(ModelFieldType.Date),
										x.ModelField().Name("Total_Withdrawal_Unit").Type(ModelFieldType.Float),
										x.ModelField().Name("Total_Withdrawal_Amount").Type(ModelFieldType.Float),
										x.ModelField().Name("Tax").Type(ModelFieldType.Float),
										x.ModelField().Name("Withdrawal_Reason").Type(ModelFieldType.String),
										x.ModelField().Name("To_Employer").Type(ModelFieldType.Float),
										x.ModelField().Name("Employer_Id").Type(ModelFieldType.String)

											)
										)
									.ServerProxy(
									x.AjaxProxy()
											  .Url(Url.Action("ReadWithdrawalPending"))
											  )
											// .PageSize(10)
											)
									.BottomBar(
									x.PagingToolbar()
											 )
					.Refresh()
					.Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { App.frmWithdrawalApproveP_Main.getForm().loadRecord(selected[0]);}")
					.ColumnModel(x.Column().DataIndex("ESF_Id").Text("EMPLOYEE ACCOUNT ID").Width(150))
					.ColumnModel(x.Column().DataIndex("Employee_Name").Text("EMPLOYEE NAME").Width(350))
					.ColumnModel(x.Column().DataIndex("Scheme_Name").Text("SCHEME").Width(250))
					.ColumnModel(x.Column().DataIndex("Fund_Name").Text("FUND").Width(150))
					.ColumnModel(x.Column().DataIndex("Unit_Price").Text("UNIT PRICE").Width(150))
					.ColumnModel(x.Column().DataIndex("Total_Withdrawal_Amount").Text("WITHDRAWAL AMOUNT").Width(150))
					.ColumnModel(x.Column().DataIndex("To_Employer").Text(" AMOUNT").Width(150))
					.ColumnModel(x.Column().DataIndex("Trans_Request_Date").Text("REQUEST DATE ").Width(100))
					.ColumnModel(x.Column().DataIndex("Employer_Id").Text("EMPLOYER ID").Width(150))

															   ),

																  x.FieldSet()
																	.Height(1010)
																	.Width(450)
																   .Layout(LayoutType.Column)
																	.Title("Benefit Request Details")
																	.MarginSpec("0 0 0 10")
																	.Defaults(dd =>
																	{ dd.Add(new Parameter("LabelWidth", "115")); })

																	  .Items(
																			x.Hidden().Name("Withdrawal_No"),
																			x.Hidden().Name("Scheme_Id"),
																			x.Hidden().Name("Fund_Id"),
																			x.Hidden().Name("Scheme_Fund_Id"),
																			x.Hidden().Name("Employer_Id"),

																			 x.TextField()
																			.Name("ESF_Id")
																			.Width(400)
																			.FieldLabel("Employee Account ID")
																			.ReadOnly(true)
																			.AllowBlank(false)
																			.MarginSpec("3 0 5 10")
																			.FieldStyle("TEXT-TRANSFORM:UPPERCASE")
																			.BlankText("")
																			 .DirectEvents(de =>
																			 {
																				 de.Change.Url = Url.Action("GetUPriceApprove");
																			 })  ,

																			x.TextField()
																			.Name("Employee_Name")
																			.Width(400)
																			.FieldLabel("Name of Employee")
																			.ReadOnly(true)
																			.AllowBlank(false)
																			.MarginSpec("3 0 5 10")
																			.FieldStyle("TEXT-TRANSFORM:UPPERCASE")
																			.BlankText(""),


																			x.TextField()
																			.Name("Scheme_Name")
																			.Width(400)
																			.FieldLabel("Scheme")
																			.ReadOnly(true)
																			.AllowBlank(false)
																			.MarginSpec("3 0 5 10")
																			.FieldStyle("TEXT-TRANSFORM:UPPERCASE")
																			.BlankText(""),

																			 x.TextField()
																			.Name("Fund_Name")
																			.Width(400)
																			.FieldLabel("Fund")
																			.ReadOnly(true)
																			.AllowBlank(false)
																			.MarginSpec("3 0 5 10")
																			.FieldStyle("TEXT-TRANSFORM:UPPERCASE")
																			.BlankText(""),




																			x.TextField()
																			.Name("Employee_Unit_Balance")
																			.Width(120)
																			.FieldLabel("Employee Unit")
																			.ReadOnly(true)
																			.AllowBlank(false)
																			.MarginSpec("3 0 5 10"),

																			 x.TextField()
																			.Name("Employer_Unit_Balance")
																			.Width(120)
																			.FieldLabel("Employer Unit")
																			.ReadOnly(true)
																			.AllowBlank(false)
																			.MarginSpec("3 0 5 10"),

																			 x.TextField()
																			.Name("Total_Unit_Balance")
																			.Width(120)
																			.FieldLabel("Total Units")
																			.ReadOnly(true)
																			.AllowBlank(false)
																			.MarginSpec("3 0 5 10"),

																			   x.TextField()
																			.Name("Total_Con_Balance")
																			.Width(120)
																			.FieldLabel("Total Con.")
																			.ReadOnly(true)
																			.AllowBlank(false)
																			.MarginSpec("3 0 5 10"),

																			x.TextField().Name("Unit_Price").FieldLabel("Unit Price").MarginSpec("3 0 5 10").ReadOnly(true) .Width(120),


																			 x.TextField()
																			.Name("Total_Benefit").ID("WithdrawalApprove_TotalB")
																			.Width(120)
																			.FieldLabel("Total Benefit")
																			.ReadOnly(true)
																			.AllowBlank(false)
																			.MarginSpec("3 0 5 10"),



																			x.TextField().Name("Total_Withdrawal_Amount").Width(210).ReadOnly(true).FieldLabel("Withdrawal (Amount)").MarginSpec("3 0 10 10"),


																			x.TextField().Name("Total_Withdrawal_Unit").Width(170).ReadOnly(true).FieldLabel("Withdrawal (Unit)").MarginSpec("3 0 10 10"),

																			x.TextField().Name("To_Employer_Amount").ID("frmWDApprove_To_Employer").Width(210).ReadOnly(true).FieldLabel("To Employer (Amount)").MarginSpec("3 0 10 10"),

																			x.TextField().Name("To_Employer").Width(170).ReadOnly(true).FieldLabel("To Employer (Unit)").MarginSpec("3 0 10 10"),


																			x.TextField()
																			.Name("Tax")
																			.Width(210)
																			.ReadOnly(true)
																			.FieldLabel("Tax")
																			.MarginSpec("3 0 10 10")
																			.FieldStyle("TEXT-TRANSFORM:UPPERCASE"),

																			x.DateField()
																			.Name("Trans_Request_Date")
																			.Width(170)
																			.ReadOnly(true)
																			.AllowBlank(false)
																			.EmptyText("")
																			.FieldLabel("Request Date")
																			.MarginSpec("3 0 10 10"),
																			  //x.ComboBox().Name("Payment_Mode")
																			  //.FieldLabel("Payment Mode")                                                                   
																			  //.MarginSpec("3 0 10 10").TabIndex(5).Width(170)
																			  //.ReadOnly(true)
																			  //.AllowBlank(false),

																			  //x.TextField()
																			  //.Name("Instrument_No")
																			  //.Width(170)
																			  //.FieldLabel("Instrument Number")
																			  //.ReadOnly(true) .MarginSpec("3 0 10 10"),



																			  x.TextArea()
																			.Name("Withdrawal_Reason")
																			.Width(400)
																			.AllowBlank(false)
																			.ReadOnly(true)
																			.FieldLabel("Reason for withdrawal")
																			.MarginSpec("3 0 10 10"),


																				x.Button()
																				.Text("Approve")
																				.Width(120)
																				.Icon(Icon.Add)
																				.DirectEvents(de =>
																				{
																					de.Click.Confirmation.ConfirmRequest = true;
																					de.Click.Confirmation.Title = "Approve";
																					de.Click.Confirmation.Message = "Approve Benefit Payment?";
																					de.Click.Url = Url.Action("ApproveRecord");

																				}).MarginSpec("10 10 0 10"),

																				x.Button()
																				.Text("Disapprove")
																				.Width(140)
																				.Icon(Icon.Add)
																				.DirectEvents(de =>
																				{
																					de.Click.Confirmation.ConfirmRequest = true;
																					de.Click.Confirmation.Title = "Disapprove";
																					de.Click.Confirmation.Message = "Disapprove Banefit Payment?";
																					de.Click.Url = Url.Action("DisapproveRecord");

																				}).MarginSpec("10 10 0 10"),


																				x.Button()
																				.Text("Cancel")
																				.Width(100)
																				.Icon(Icon.ArrowRefresh)
																				.OnClientClick("this.up('form').getForm().reset();")
																				.MarginSpec("10 10 0 10")


															   )
					 )
			)

)













