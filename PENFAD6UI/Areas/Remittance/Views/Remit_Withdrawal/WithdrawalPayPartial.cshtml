
@using PENFAD6DAL.Repository.Remittance.Contribution
@using PENFAD6DAL.Repository.Setup.PfmSetup
@using PENFAD6DAL.Repository.CRM.Employer


@model IEnumerable<Remit_PurchaseRepo>

@{
    var ES = new crm_EmployerSchemeRepo();
    var scheme = new pfm_SchemeRepo();
    var employer = new crm_EmployerRepo();
    var x = Html.X();
}

<script>

        var onSuccess = function (grid, data) {
            grid.show();
            grid.getStore().loadData(data);
        };

</script>

@(x.FormPanel()
                        .ID("frmWithdrawalPayP_Main")
                        .Title("Pay Benefit Request")
                        .Frame(true)
                        .Closable(true)
                        .AutoScroll(true)
                        .MarginSpec("0 0 0 0")
                        .Width(1000)
                        .Height(1200)
                        .FieldDefaults(fd =>
                        {
                            fd.LabelAlign = LabelAlign.Top;
                            fd.MsgTarget = MessageTarget.Side;
                        })
                        .Items(


                                    x.FieldSet()
                                    .Height(1200)
                                    .Width(1600)
                                    .Frame(true)
                                    .Layout(LayoutType.Column)
                                    .MarginSpec("0 0 0 10")
                                    .Defaults(dd =>
                                    { dd.Add(new Parameter("LabelWidth", "115")); })

                                    .Items(

                                     x.FieldSet()
                                    .MarginSpec("5 0 0 0")
                                    .Width(800)
                                    .Height(1100)
                                    .Defaults(dd =>
                                    { dd.Add(new Parameter("LabelWidth", "115")); })

                                    .Items(

                                    x.Button()
                                    .Text("View Approved Benefit Request")
                                    .Icon(Icon.ArrowRefresh)
                                    .MarginSpec("5 0 5 10")
                                    .Width(280)
                                    .DirectEvents(de =>
                                    {
                                        de.Click.Url = Url.Action("ReadWithdrawalApprove");
                                        de.Click.Success = "onSuccess(App.WithdrawalBenefitPay_Grid, result.data);";
                                    }),

                                    x.GridPanel()
                                    .ID("WithdrawalBenefitPay_Grid")
                                    .Title("List of Approved Benefit Request")
                                    .Frame(true)
                                    //.Width(790)
                                    .Height(980)
                                    .MarginSpec("10 0 0 10")
                                    .Plugins(
                                    x.FilterHeader()
                                        )
                                    .Store(
                                    x.Store()
                                    .AutoLoad(true)
                                    .ID("PayRequestWithStore")
                                    .Model(
                                    x.Model()
                                    .Fields(
                                        x.ModelField().Name("Withdrawal_No").Type(ModelFieldType.String),
                                        x.ModelField().Name("Scheme_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Fund_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Total_Unit_Balance").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Total_Con_Balance").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Scheme_Fund_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("ESF_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Employee_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Scheme_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Fund_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Employee_Con_Balance").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Employer_Con_Balance").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Employee_Unit_Balance").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Employer_Unit_Balance").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Unit_Price").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Total_Benefit").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Trans_Request_Date").Type(ModelFieldType.Date),
                                        x.ModelField().Name("Total_Withdrawal").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Tax").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Withdrawal_Reason").Type(ModelFieldType.String),
                                        x.ModelField().Name("Employer_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("To_Employer").Type(ModelFieldType.Float)
                                            )
                                        )
                                    .ServerProxy(
                                    x.AjaxProxy()
                                              .Url(Url.Action("ReadWithdrawalApprove"))
                                              )
                                            // .PageSize(10)
                                            )
                                    .BottomBar(
                                    x.PagingToolbar()
                                             )
                    .Refresh()
                    .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { App.frmWithdrawalPayP_Main.getForm().loadRecord(selected[0]);}")
                    .ColumnModel(x.Column().DataIndex("ESF_Id").Text("EMPLOYEE ACCOUNT ID").Width(150))
                    .ColumnModel(x.Column().DataIndex("Employee_Name").Text("EMPLOYEE NAME").Width(350))
                    .ColumnModel(x.Column().DataIndex("Scheme_Name").Text("SCHEME").Width(250))
                    .ColumnModel(x.Column().DataIndex("Fund_Name").Text("FUND").Width(150))
                    .ColumnModel(x.Column().DataIndex("Unit_Price").Text("UNIT PRICE").Width(150))
                    .ColumnModel(x.Column().DataIndex("Total_Withdrawal").Text("WITHDRAWAL AMOUNT").Width(150))
                    .ColumnModel(x.Column().DataIndex("Trans_Request_Date").Text("REQUEST DATE ").Width(100))

                                                               ),

                                                                  x.FieldSet()
                                                                    .Height(1100)
                                                                    .Width(450)
                                                                   .Layout(LayoutType.Column)
                                                                    .Title("Benefit Request Details")
                                                                    .MarginSpec("0 0 0 10")
                                                                    .Defaults(dd =>
                                                                    { dd.Add(new Parameter("LabelWidth", "115")); })

                                                                      .Items(
                                                                            x.Hidden().Name("Withdrawal_No"),
                                                                            x.Hidden().Name("Scheme_Id"),
                                                                            x.Hidden().Name("Fund_Id"),
                                                                            x.Hidden().Name("Employer_Id"),
                                                                            x.Hidden().Name("To_Employer"),

                                                                            x.Hidden().Name("Scheme_Fund_Id").ID("wPaySFId")
                                                                            .Listeners(ls =>
                                                                                       ls.Change.Handler = "App.wPay_GLB.clearValue(); App.wPay_GLB.getStore().load();"),


                                                                             x.TextField()
                                                                            .Name("ESF_Id")
                                                                            .Width(400)
                                                                            .FieldLabel("Employee Account ID")
                                                                            .ReadOnly(true)
                                                                            .AllowBlank(false)
                                                                            .MarginSpec("3 0 5 10")
                                                                            .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                                                            .BlankText("")
                                                                           .DirectEvents(de =>
                                                                             {
                                                                                 de.Change.Url = Url.Action("GetUPriceApprove");
                                                                             }),

                                                                            x.TextField()
                                                                            .Name("Employee_Name")
                                                                            .Width(400)
                                                                            .FieldLabel("Name of Employee")
                                                                            .ReadOnly(true)
                                                                            .AllowBlank(false)
                                                                            .MarginSpec("3 0 5 10")
                                                                            .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                                                            .BlankText(""),


                                                                            x.TextField()
                                                                            .Name("Scheme_Name")
                                                                            .Width(400)
                                                                            .FieldLabel("Scheme")
                                                                            .ReadOnly(true)
                                                                            .AllowBlank(false)
                                                                            .MarginSpec("3 0 5 10")
                                                                            .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                                                            .BlankText(""),

                                                                             x.TextField()
                                                                            .Name("Fund_Name")
                                                                            .Width(400)
                                                                            .FieldLabel("Fund")
                                                                            .ReadOnly(true)
                                                                            .AllowBlank(false)
                                                                            .MarginSpec("3 0 5 10")
                                                                            .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                                                            .BlankText(""),

                                                                               x.Hidden()
                                                                               .Name("Employee_Unit_Balance")
                                                                               .Width(120)
                                                                               .FieldLabel("Employee Unit")
                                                                               .ReadOnly(true)
                                                                               //.AllowBlank(false)
                                                                               .MarginSpec("3 0 5 10"),

                                                                                x.Hidden()
                                                                               .Name("Employer_Unit_Balance")
                                                                               .Width(120)
                                                                               .FieldLabel("Employer Unit")
                                                                               .ReadOnly(true)
                                                                               // .AllowBlank(false)
                                                                               .MarginSpec("3 0 5 10"),

                                                                                x.Hidden()
                                                                               .Name("Total_Unit_Balance")
                                                                               .Width(120)
                                                                               .FieldLabel("Total Units")
                                                                               .ReadOnly(true)
                                                                               //.AllowBlank(false)
                                                                               .MarginSpec("3 0 5 10"),

                                                                               x.TextField()
                                                                            .Name("Total_Con_Balance")
                                                                            .Width(120)
                                                                            .FieldLabel("Total Con.")
                                                                            .ReadOnly(true)
                                                                            .AllowBlank(false)
                                                                            .MarginSpec("3 0 5 10"),

                                                                            x.TextField().Name("Unit_Price").FieldLabel("Unit Price").MarginSpec("3 0 5 10").ReadOnly(true).Width(120)
                                                                            .DirectEvents(de =>
                                                                             {
                                                                                 de.Change.Url = Url.Action("GetUPriceApprove");
                                                                             }),


                                                                             x.TextField()
                                                                            .Name("Total_Benefit").ID("WithdrawalApprove_TotalB")
                                                                            .Width(120)
                                                                            .FieldLabel("Total Benefit")
                                                                            .ReadOnly(true)
                                                                            .AllowBlank(false)
                                                                            .MarginSpec("3 0 5 10"),



                                                                            x.TextField().Name("Total_Withdrawal_Amount").Width(210).ReadOnly(true).FieldLabel("Withdrawal (Amount)").MarginSpec("3 0 10 10"),

                                                                            x.TextField()
                                                                            .Name("Tax")
                                                                            .Width(170)
                                                                            .ReadOnly(true)
                                                                            .FieldLabel("Tax")
                                                                            .MarginSpec("3 0 10 10")
                                                                            .FieldStyle("TEXT-TRANSFORM:UPPERCASE"),

                                                                            x.TextField().Name("Total_Withdrawal_Unit").Width(210).ReadOnly(true).FieldLabel("Total Withdrawal  .(Unit)").MarginSpec("3 0 10 10"),



                                                                            x.DateField()
                                                                            .Name("Trans_Request_Date")
                                                                            .Width(170)
                                                                            .ReadOnly(true)
                                                                            .AllowBlank(false)
                                                                            .EmptyText("")
                                                                            .FieldLabel("Request Date")
                                                                            .MarginSpec("3 0 10 10"),


                                                                              x.TextArea()
                                                                            .Name("Withdrawal_Reason")
                                                                            .Width(400)
                                                                            .AllowBlank(false)
                                                                            .ReadOnly(true)
                                                                            .FieldLabel("Reason for withdrawal")
                                                                            .MarginSpec("3 0 10 10"),

                                                                                x.ComboBox().Name("Payment_Mode")
                                                                                .FieldLabel("Payment Mode")
                                                                                .ID("Benefit_P_Mode")
                                                                                .MarginSpec("3 0 10 10").TabIndex(5).Width(170)
                                                                                .Editable(false)
                                                                                .AllowBlank(false)
                                                                                .EmptyText("Select Payment Mode")
                                                                                .QueryMode(DataLoadMode.Local)
                                                                                .TriggerAction(TriggerAction.All)
                                                                                .EmptyText("Select Payment Mode")
                                                                                .BlankText("'Receipt Type' is required.").Items("TRANSFER","CASH", "CHEQUE"),

                                                                                // .Listeners(l => l.Select.Handler = "if (App.Benefit_P_Mode.getValue() == 'CHEQUE') {App.Benefit_Instrument_Number.enable();App.Instrument_Number.clear()} else {App.Benefit_Instrument_Number.disable();}"),

                                                                                x.TextField()
                                                                                .Name("Instrument_No")
                                                                                .ID("Benefit_Instrument_Number")
                                                                                .Width(170)
                                                                                .FieldLabel("Instrument Number")
                                                                                .MarginSpec("3 0 10 10")
                                                                                .FieldStyle("TEXT-TRANSFORM:UPPERCASE"),

                                                                               x.DateField()
                                                                            .Name("Pay_Date_Benefit")
                                                                            .Width(350)
                                                                            .AllowBlank(false)
                                                                            .EmptyText("")
                                                                            .FieldLabel("Payment Date")
                                                                            .MarginSpec("3 0 10 10"),


                                                                    ///////////////////////
                                                                    x.ComboBox().Name("GL_Account_No").ID("wPay_GLB")
                                                                    .FieldLabel("GL Bank Account")
                                                                    .Width(350)
                                                                    .Editable(false)
                                                                    .TypeAhead(true)
                                                                    .QueryMode(DataLoadMode.Local)
                                                                    .ForceSelection(true)
                                                                    .TriggerAction(TriggerAction.All)
                                                                    .DisplayField("name")
                                                                    .ValueField("id")
                                                                    .BlankText("GL Bank Account is required.")
                                                                    .EmptyText("No GL Bank Account Available...")
                                                                    .ValueNotFoundText("No GL Bank Account Available...").MarginSpec("15 0 0 10")
                                                                      .Listeners(ls =>
                                                                                       ls.Change.Handler = "App.wPay_GLBalance.clearValue(); App.wPay_GLBalance.getStore().load();")

                                                                    .Store(Html.X().Store()
                                                                        .AutoLoad(false)
                                                                        .Model(Html.X().Model()
                                                                            .IDProperty("wPay_GLB_gId")
                                                                            .Fields(
                                                                                new ModelField("id", ModelFieldType.String) { Mapping = "wPay_GLB_gId" },
                                                                                new ModelField("name", ModelFieldType.String) { Mapping = "gName" }
                                                                            )
                                                                        )
                                                                        .Proxy(Html.X().AjaxProxy()
                                                                            .Url(Url.Action("GetGLAB"))
                                                                            .Reader(Html.X().JsonReader().RootProperty("data"))
                                                                        )
                                                                        .Parameters(ps =>
                                                                            ps.Add(new StoreParameter("Scheme_Fund_Id", "App.wPaySFId.getValue()", ParameterMode.Raw))
                                                                        )
                                                                        .Listeners(ls =>
                                                                                        ls.Load.Handler = @"var combo = App.wPay_GLB; 
                                                                                                            combo.setValue(records[0].get(combo.valueField)); App.wPay_GLBalance.clearValue(); App.wPay_GLBalance.getStore().load();"

                                                                        )

                                                                   )
                                                            ,

                                            x.ComboBox().Name("GL_Balance").ID("wPay_GLBalance")
                                                .FieldLabel("GL Bank Account Balance")
                                                .Width(350)
                                                .Editable(false)
                                                .ReadOnly(true)
                                                .TypeAhead(true)
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .TriggerAction(TriggerAction.All)
                                                .DisplayField("id")
                                                .ValueField("name")
                                                .BlankText("Select GL Bank Account.")
                                                .ValueNotFoundText("No GL Bank Account...").MarginSpec("0 70 0 10")
                                                .Store(Html.X().Store()
                                                    .AutoLoad(false)
                                                    .Model(Html.X().Model()
                                                        .IDProperty("WPaymId")
                                                        .Fields(
                                                            new ModelField("id", ModelFieldType.String) { Mapping = "WPaymId" },
                                                            new ModelField("name", ModelFieldType.String) { Mapping = "mName" }
                                                        )
                                                    )
                                                    .Proxy(Html.X().AjaxProxy()
                                                        .Url(Url.Action("GetGLaccPay"))
                                                        .Reader(Html.X().JsonReader().RootProperty("data"))
                                                    )
                                                    .Parameters(ps =>
                                                        ps.Add(new StoreParameter("GL_Account_No", "App.wPay_GLB.getValue()", ParameterMode.Raw))
                                                    )
                                                    .Listeners(ls =>
                                                                    ls.Load.Handler = @"var combo = App.wPay_GLBalance; 
                                                                                        combo.setValue(records[0].get(combo.valueField));"

                                                    )
                                               )
                                            ,

                                                                                //////////////////////////


                                                                                x.Button()
                                                                                .Text("Pay Benefit")
                                                                                .Width(160)
                                                                                .Icon(Icon.Add)
                                                                                .DirectEvents(de =>
                                                                                {
                                                                                    de.Click.Confirmation.ConfirmRequest = true;
                                                                                    de.Click.Confirmation.Title = "Process";
                                                                                    de.Click.Confirmation.Message = "Pay Benefit?";
                                                                                    de.Click.Url = Url.Action("PayRecord");

                                                                                }).MarginSpec("20 10 0 10"),

                                                                                x.Button()
                                                                                .Text("Disapprove")
                                                                                .Width(200)
                                                                                .Icon(Icon.Add)
                                                                                .DirectEvents(de =>
                                                                                {
                                                                                    de.Click.Confirmation.ConfirmRequest = true;
                                                                                    de.Click.Confirmation.Title = "Process";
                                                                                    de.Click.Confirmation.Message = "Disapprove?";
                                                                                    de.Click.Url = Url.Action("DApproveRecord");

                                                                                }).MarginSpec("20 10 0 10"),

                                                                                x.Button()
                                                                                .Text("Cancel")
                                                                                .Width(160)
                                                                                .Icon(Icon.ArrowRefresh)
                                                                                .OnClientClick("this.up('form').getForm().reset();")
                                                                                .MarginSpec("20 10 0 10")


                                                               )
                     )
            )

)













