
@using PENFAD6DAL.Repository.Investment.Bond
@using PENFAD6DAL.Repository.Setup.PfmSetup
@using PENFAD6DAL.Repository.Setup.SystemSetup


@model IEnumerable<BondRepo>

@{
    var schemeFund = new pfm_Scheme_FundRepo();
    var MM_TBill = new BondRepo();
    var repo_Issuer = new setup_IssuerRepo();
    var x = Html.X();
}

<script>
        var onSuccess = function (grid, data) {
            grid.show();
            grid.getStore().loadData(data);
        };
</script>

@(x.FormPanel()
                        .ID("frm_SecBondPartial_main")
                        .Title("Secondary Bond Application")
                        .Frame(true)
                        .Closable(true)
                        .AutoScroll(true)
                        .MarginSpec("0 0 0 0")
                        .Width(1000)
                        .Height(1500)
                        .FieldDefaults(fd =>
                        {
                            fd.LabelAlign = LabelAlign.Top;
                            fd.MsgTarget = MessageTarget.Side;
                        })
                        .Items(

                                               x.FieldSet()
                                                .Height(1500)
                                                .Width(1600)
                                                .Frame(true)
                                                .MarginSpec("0 0 0 10")

                                                .Items(

                                                                  x.FieldSet()
                                                                    .Height(320)
                                                                    .Width(780)
                                                                    .Layout(LayoutType.Column)
                                                                    .Title("'Scheme-Fund' Details")
                                                                    .MarginSpec("0 0 0 10")
                                                                    .Defaults(dd =>
                                                                    { dd.Add(new Parameter("LabelWidth", "115")); })

                                                                        .Items(
                                                                        x.Hidden().Name("Scheme_Id").ID("SecBondPartialAddES_ID")
                                                                        .Listeners(ls =>
                                                                                        ls.Change.Handler = "App.SecBondPartialAddEFM.clearValue(); App.SecBondPartialAddEFM.getStore().load();"),

                                                                        x.Hidden().Name("Scheme_Fund_Id").ID("SecBondPartialAddESF_ID")
                                                                        .Listeners(ls =>
                                                                                       ls.Change.Handler = "App.SecBondPartialECIS_GLB.clearValue(); App.SecBondPartialECIS_GLB.getStore().load();"),

                                                                        x.Hidden().Name("ES_Id").ID("SecBondPartialpurchase_ES_Id"),

                                                                        x.TextField()
                                                                        .Name("Scheme_Name")
                                                                        .Width(710)
                                                                        .FieldLabel("Scheme")
                                                                        .Editable(false)
                                                                        .AllowBlank(false)
                                                                        .MarginSpec("0 0 0 10")
                                                                        .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                                                        .BlankText("'Scheme-Fund' must be selected."),

                                                                        x.TextField()
                                                                        .Name("Fund_Name")
                                                                        .Width(450)
                                                                        .FieldLabel("Fund")
                                                                        .Editable(false)
                                                                        .AllowBlank(false)
                                                                        .MarginSpec("0 0 0 10")
                                                                        .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                                                        .BlankText("'Scheme-Fund' must be selected."),

                                                                     x.ComboBox().Name("GL_Account_No").ID("SecBondPartialECIS_GLB")
                                                                    .FieldLabel("GL Bank Account")
                                                                    .Width(450)
                                                                    .Editable(false)
                                                                    .TypeAhead(true)
                                                                    .QueryMode(DataLoadMode.Local)
                                                                    .ForceSelection(true)
                                                                    .TriggerAction(TriggerAction.All)
                                                                    .DisplayField("name")
                                                                    .ValueField("id")
                                                                    .BlankText("GL Bank Account is required.")
                                                                    .EmptyText("No GL Bank Account Available...")
                                                                    .ValueNotFoundText("No GL Bank Account Available...").MarginSpec("0 0 0 10")
                                                                      .Listeners(ls =>
                                                                                       ls.Change.Handler = "App.SecBondPartialAddECIS_GLBalance.clearValue(); App.SecBondPartialAddECIS_GLBalance.getStore().load();")

                                                                    .Store(Html.X().Store()
                                                                        .AutoLoad(false)
                                                                        .Model(Html.X().Model()
                                                                            .IDProperty("secbondnewId")
                                                                            .Fields(
                                                                                new ModelField("id", ModelFieldType.String) { Mapping = "secbondnewId" },
                                                                                new ModelField("name", ModelFieldType.String) { Mapping = "gName" }
                                                                            )
                                                                        )
                                                                        .Proxy(Html.X().AjaxProxy()
                                                                            .Url(Url.Action("Sec_GetGLAB"))
                                                                            .Reader(Html.X().JsonReader().RootProperty("data"))
                                                                        )
                                                                        .Parameters(ps =>
                                                                            ps.Add(new StoreParameter("Scheme_Fund_Id", "App.SecBondPartialAddESF_ID.getValue()", ParameterMode.Raw))
                                                                        )
                                                                        .Listeners(ls =>
                                                                                        ls.Load.Handler = @"var combo = App.SecBondPartialECIS_GLB; 
                                                                                                            combo.setValue(records[0].get(combo.valueField)); App.SecBondPartialAddECIS_GLBalance.clearValue(); App.SecBondPartialAddECIS_GLBalance.getStore().load();"

                                                                        )

                                                                   )
                                                            ,

                                            x.ComboBox().Name("GL_Balance").ID("SecBondPartialAddECIS_GLBalance")
                                                .FieldLabel("GL Bank Account Balance")
                                                .Width(250)
                                                .Editable(false)
                                                .ReadOnly(true)
                                                .TypeAhead(true)
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .TriggerAction(TriggerAction.All)
                                                .DisplayField("id")
                                                .ValueField("name")
                                                .BlankText("No GL Bank Account Balance")
                                                .ValueNotFoundText("No GL Bank Account Balance").MarginSpec("0 0 0 10")
                                                .Store(Html.X().Store()
                                                    .AutoLoad(false)
                                                    .Model(Html.X().Model()
                                                        .IDProperty("secbondnewId_B")
                                                        .Fields(
                                                            new ModelField("id", ModelFieldType.String) { Mapping = "secbondnewId_B" },
                                                            new ModelField("name", ModelFieldType.String) { Mapping = "mName" }
                                                        )
                                                    )
                                                    .Proxy(Html.X().AjaxProxy()
                                                        .Url(Url.Action("Sec_GetGLacc"))
                                                        .Reader(Html.X().JsonReader().RootProperty("data"))
                                                    )
                                                    .Parameters(ps =>
                                                        ps.Add(new StoreParameter("GL_Account_No", "App.SecBondPartialECIS_GLB.getValue()", ParameterMode.Raw))
                                                    )
                                                    .Listeners(ls =>
                                                                    ls.Load.Handler = @"var combo = App.SecBondPartialAddECIS_GLBalance; 
                                                                                        combo.setValue(records[0].get(combo.valueField));"

                                                    )
                                               )
                                        ,

                                            x.Button()
                                            .Text("Select 'Scheme-Fund'")
                                            .Width(220)
                                            .Icon(Icon.ApplicationFormAdd)
                                            .TabIndex(28)
                                            .Handler("App.SecBondSchemeFund.show(this);")
                                            .MarginSpec("32 10 0 10")
                                            )
                                            ,


                                        x.FieldSet()
                                        .Height(800)
                                        .Width(780)
                                        .Layout(LayoutType.Column)
                                        .Title("Investment Details")
                                        .MarginSpec("0 0 0 10")
                                        .Defaults(dd =>
                                        { dd.Add(new Parameter("LabelWidth", "115")); })

                                            .Items(
                                            x.Hidden().Name("Invest_No"),

                                                // x.ComboBox().Name("Currency")
                                                //.FieldLabel("Currncy")
                                                //.MarginSpec("10 1000 0 10").TabIndex(5).Width(350)
                                                //.AllowBlank(false)
                                                //.Editable(false)
                                                //.EmptyText("Select Currency")
                                                //.Items("GHS", "USD", "EUR"),

                                                x.TextField()
                                            .Name("Contract_No")
                                            .Width(350)
                                            .FieldLabel("Contract Number")
                                            .MarginSpec("10 0 0 10")
                                            .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                            ,

                                            x.ComboBox().Name("Class_Id").ID("SecBondPartialADDECID")
                                            .FieldLabel("Asset Class")
                                            .MarginSpec("10 0 0 10").TabIndex(11).Width(350)
                                            .AllowBlank(false)
                                            .Editable(false)
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                            .EmptyText("Select Asset Class")
                                            .Items(MM_TBill.GetAssetList().Select(d => new ListItem(d.Description, d.Class_Id)))
                                            .Listeners(ls =>
                                                            ls.Change.Handler = "App.SecBondPartialAddEPID.clearValue(); App.SecBondPartialAddEPID.getStore().load();"),

                                                x.ComboBox().Name("Product_Id").ID("SecBondPartialAddEPID")
                                                .FieldLabel("Product")
                                                .Width(350)
                                                .Editable(false)
                                                .TypeAhead(true)
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .TriggerAction(TriggerAction.All)
                                                .DisplayField("name")
                                                .ValueField("id")
                                                .BlankText("Product is required.")
                                                .EmptyText("No Product Available...")
                                                .ValueNotFoundText("No Product Available...").MarginSpec("10 0 0 10")
                                                .Store(Html.X().Store()
                                                    .AutoLoad(false)
                                                    .Model(Html.X().Model()
                                                        .IDProperty("pId")
                                                        .Fields(
                                                            new ModelField("id", ModelFieldType.String) { Mapping = "pId" },
                                                            new ModelField("name", ModelFieldType.String) { Mapping = "pName" }
                                                        )
                                                    )
                                                    .Proxy(Html.X().AjaxProxy()
                                                        .Url(Url.Action("GetpID"))
                                                        .Reader(Html.X().JsonReader().RootProperty("data"))
                                                    )
                                                    .Parameters(ps =>
                                                        ps.Add(new StoreParameter("Class_Id", "App.SecBondPartialADDECID.getValue()", ParameterMode.Raw))
                                                    )
                                                    .Listeners(ls =>
                                                                    ls.Load.Handler = @"var combo = App.SecBondPartialAddEPID; 
                                                                                        combo.setValue(records[0].get(combo.valueField));"

                                                    )
                                               )
                                                .DirectEvents(de =>
                                                {
                                                    de.Change.Url = Url.Action("ReadSecBondClass");

                                                }),

                                                x.Hidden().Name("Bond_Class").ID("txt_SecBond_Class"),


                                                x.ComboBox().Name("Fund_Manager_Id").ID("SecBondPartialAddEFM")
                                                .FieldLabel("Fund Manager")
                                                .Width(350)
                                                .Editable(false)
                                                .TypeAhead(true)
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .TriggerAction(TriggerAction.All)
                                                .DisplayField("name")
                                                .ValueField("id")
                                                .BlankText("Fund Manager is required.")
                                                .EmptyText("No Fund Manager Available...")
                                                .ValueNotFoundText("No Fund Manager Available...").MarginSpec("10 0 0 10")
                                                .Store(Html.X().Store()
                                                    .AutoLoad(false)
                                                    .Model(Html.X().Model()
                                                        .IDProperty("Id")
                                                        .Fields(
                                                            new ModelField("id", ModelFieldType.String) { Mapping = "Id" },
                                                            new ModelField("name", ModelFieldType.String) { Mapping = "Name" }
                                                        )
                                                    )
                                                    .Proxy(Html.X().AjaxProxy()
                                                        .Url(Url.Action("GetFM"))
                                                        .Reader(Html.X().JsonReader().RootProperty("data"))
                                                    )
                                                    .Parameters(ps =>
                                                        ps.Add(new StoreParameter("Scheme_Id", "App.SecBondPartialAddES_ID.getValue()", ParameterMode.Raw))
                                                    )
                                                    .Listeners(ls =>
                                                                    ls.Load.Handler = @"var combo = App.SecBondPartialAddEFM; 
                                                                                        combo.setValue(records[0].get(combo.valueField));"

                                                    )
                                               ),

                                                x.ComboBox().Name("Interest_Day_Basic").FieldLabel("Interest Day Basis").ID("txt_MM_TBill_Interest_Day_Basic_SecBond").Text("364")
                                                    .Editable(false).MarginSpec("10 0 0 10").Width(350).TabIndex(5).Listeners(ls => ls.Select.Handler = "App.ComboBoxMonthint_day_SecBond.clearValue(); App.ComboBoxMonthint_day_SecBond.getStore().load()")
                                                    .Items(
                                                     new ListItem("364"),
                                                     new ListItem("365"),
                                                     new ListItem("366"),
                                                     new ListItem("360"))
                                                     .EmptyText("Select  Interest Day Basis")
                                                     .Editable(false)
                                                     .AllowBlank(true)
                                                   .BlankText("Interest Day Basis is required.")
                                                       // .Listeners(l => l.Change.Handler = "App.txt_MM_TBill_Daily_Int_Rate_SecBond.setValue((App.frmAmount_txtAnnualInterest_SecBond.getValue() / 100) / App.txt_MM_TBill_Interest_Day_Basic_SecBond.getValue());")
                                                       .DirectEvents(de =>
                                                       {
                                                           de.Change.Url = Url.Action("calValuessec");


                                                       }),
                                                //.DirectEvents(de =>
                                                //{

                                                //    de.Change.Url = Url.Action("Sec_GetDuration");

                                                //}),

                                                x.NumberField()
                                                    .ID("frmDuration_In_Days_SecBond")
                                                    .Name("Duration_In_Days")
                                                    .FieldLabel("Tenor(In Days)").MarginSpec("10 0 0 10").TabIndex(6)
                                                    .EmptyText("Enter Tenor(In Days)")
                                                    .Width(350)
                                                    .AllowBlank(false)
                                                    .BlankText("Tenor In Days required.")
                                                      .DirectEvents(de =>
                                                      {
                                                          de.Change.Url = Url.Action("calValuessec");


                                                      }),
                                               
                                                x.ComboBox().Name("Issuer_Id")
                                                    .FieldLabel("Select Issuer  Name")
                                                    .EmptyText("Select  Issuer  Name")
                                                    .MarginSpec("10 300 30 10").TabIndex(7).Width(350)
                                                    .AllowBlank(false).Editable(true)
                                                    .BlankText("Issuer Name is required.").Items(repo_Issuer.GetIssuerList().Select(d => new ListItem(d.Issuer_Name, d.Issuer_Id))),



                                                  x.NumberField().ID("frmAmount_txtInvested_SecBond").Name("Amount_Invested").Text("0")
                                                   .FieldLabel("Nominal Value").MarginSpec("10 0 0 10").Width(170)
                                                   .AllowBlank(false)
                                                   .BlankText("Amount Invested is required.")
                                                       //.Listeners(l => l.Change.Handler = "App.txt_MM_TBill_Daily_Int_Rate_SecBond.setValue((App.frmAmount_txtAnnualInterest_SecBond.getValue() / 100) / App.txt_MM_TBill_Interest_Day_Basic_SecBond.getValue());")
                                                       .DirectEvents(de =>
                                                       {
                                                           de.Change.Url = Url.Action("calValuessec");


                                                       }),
                                                  //.DirectEvents(de =>
                                                  //{

                                                  //    de.Change.Url = Url.Action("Sec_GetDuration");

                                                  //}),


                                                  x.NumberField ().ID("frmAmount_txtAnnualInterest_SecBond").Text("0")
                                                   .Name("Annual_Int_Rate").FieldLabel("Coupon Rate")
                                                   .MarginSpec("10 0 0 10").Width(170).TabIndex(2)
                                                       //.Listeners(l => l.Change.Handler = "App.txt_MM_TBill_Daily_Int_Rate_SecBond.setValue((App.frmAmount_txtAnnualInterest_SecBond.getValue() / 100) / App.txt_MM_TBill_Interest_Day_Basic_SecBond.getValue());")
                                                       .DirectEvents(de =>
                                                       {
                                                           de.Change.Url = Url.Action("calValuessec");


                                                       }),
                                                  //.DirectEvents(de =>
                                                  //{

                                                  //    de.Change.Url = Url.Action("Sec_GetDuration");

                                                  //}),


                                                  x.NumberField().Name("Current_Yield").Text("0")
                                                   .FieldLabel("Current Yield(%)").MarginSpec("10 0 0 10").Width(170)
                                                   .AllowBlank(false).DecimalPrecision(6)
                                                   .BlankText("Current Yield is required."),

                                                   x.NumberField().Name("Bond_Qutn").Text("0")
                                                   .FieldLabel("Listed Quantity").MarginSpec("10 0 0 10").Width(170)
                                                   .AllowBlank(false),


                                                  x.NumberField().Name("Cost").Text("0")
                                                   .FieldLabel("Cost").MarginSpec("10 0 0 10").Width(170)
                                                   .AllowBlank(false)
                                                   .BlankText("Amount Cost is required."),

                                                  x.NumberField().Name("Brokerage_Fee").Text("0")
                                                   .FieldLabel("Brokerage Fee").MarginSpec("10 0 0 10").Width(170)
                                                   .AllowBlank(false),




                                                 x.DateField().ID("MM_TBillStart_Date_SecBond").Name("Start_Date")
                                                   .FieldLabel("Investment Start Date").Editable(false)
                                                   .EmptyText("Select  Investment Start Date")
                                                   .MarginSpec("10 0 0 10").Width(170).TabIndex(3)
                                                   .DirectEvents(de =>
                                                   {
                                                       de.Change.Url = Url.Action("calValuessec1");


                                                   }),
                                               //.DirectEvents(de =>
                                               //{

                                               //    de.Change.Url = Url.Action("Sec_GetDuration");

                                               //}),

                                               x.DateField().ID("MM_TBillMaturity_Date_SecBond").Name("Maturity_Date").ReadOnly(true)
                                                   .FieldLabel("Maturity Date").MarginSpec("10 0 0 10").Width(170).TabIndex(4)
                                                   .EmptyText("Maturity  Date").Editable(false)
                                                            .DirectEvents(de =>
                                                   {
                                                       de.Change.Url = Url.Action("calValuessec");


                                                   }),

                                               x.DateField().ID("dd").Name("Last_Coupon_Payment_Date")
                                                   .FieldLabel("Last Coupon Payment Date").MarginSpec("10 0 0 10").Width(220).TabIndex(4)
                                                   .EmptyText("Last Coupon Payment Date").Editable(false)
                                                       // .Listeners(l => l.Change.Handler = "App.txt_MM_TBill_Daily_Int_Rate_SecBond.setValue((App.frmAmount_txtAnnualInterest_SecBond.getValue() / 100) / App.txt_MM_TBill_Interest_Day_Basic_SecBond.getValue());")
                                                       .DirectEvents(de =>
                                                       {
                                                           de.Change.Url = Url.Action("calValuessec");


                                                       }),
                                              //.DirectEvents(de =>
                                              //{

                                              //    de.Change.Url = Url.Action("Sec_GetDuration");

                                              //}),


                                              x.DateField().ID("ff").Name("Next_Coupon_Date_Aftertrade")
                                                   .FieldLabel("Next Coupon Date").MarginSpec("10 0 0 10").Width(180).TabIndex(4)
                                                   .EmptyText("Next Coupon Date").ReadOnly(true),

                                              x.DateField().ID("hh").Name("Settlement_Date")
                                                   .FieldLabel("Settlement Date").MarginSpec("10 0 0 10").Width(180).TabIndex(4)
                                                   .EmptyText("Settlement Date").Editable(false),

                                              x.NumberField().ID("ttss").Name("Trans_Duration").Text("0")
                                                    .FieldLabel("Duration")
                                                    .MarginSpec("10 0 0 10").Width(100).TabIndex(5).ReadOnly(true).Editable(false),


                                               x.FieldSet().Title("Future Values").Layout(LayoutType.Column).Height(120).MarginSpec("5 0 0 5")
                                               .Items(

                                               x.NumberField().ID("ttd").Name("Base_Norminal_Value").Text("0")
                                                    .FieldLabel("Base Norminal Value")
                                                    .MarginSpec("10 0 0 10").Width(220).TabIndex(5).ReadOnly(true).Editable(false)
                                                        // .Listeners(l => l.Change.Handler = "App.txt_MM_TBill_Daily_Int_Rate_SecBond.setValue((App.frmAmount_txtAnnualInterest_SecBond.getValue() / 100) / App.txt_MM_TBill_Interest_Day_Basic_SecBond.getValue());")
                                                        .DirectEvents(de =>
                                                        {
                                                            de.Change.Url = Url.Action("calValuessec");


                                                        }),
                                               //.DirectEvents(de =>
                                               //{

                                               //    de.Change.Url = Url.Action("Sec_GetDuration");

                                               //}),



                                               x.NumberField().ID("frmInterest_On_Maturity_SecBond").Name("Interest_On_Maturity").Text("0")
                                                    .FieldLabel("Redemption Yield")
                                                    .MarginSpec("10 0 0 10").Width(220).TabIndex(5).ReadOnly(true).Editable(false),

                                               x.NumberField().ID("frmAmount_on_txtMaturity_SecBond").Name("Amount_on_Maturity").Text("0")
                                                    .FieldLabel("Maturity Value").MarginSpec("0 30 10 10").Width(300).TabIndex(6)
                                                    .MarginSpec("10 0 0 10").Width(220).ReadOnly(true )
                                               ),

                                               x.Hidden().Name("Daily_Int_Rate").ID("txt_MM_TBill_Daily_Int_Rate_SecBond").Text("0")

                                                                ),
                                                                 x.Button()
                                                                .Text("Submit for approval")
                                                                .Width(200)
                                                                .Icon(Icon.Add)
                                                                .DirectEvents(de =>
                                                                {
                                                                    de.Click.Confirmation.ConfirmRequest = true;
                                                                    de.Click.Confirmation.Title = "Save";
                                                                    de.Click.Confirmation.Message = "Process Investment?";
                                                                    de.Click.Url = Url.Action("Sec_SaveRecord");

                                                                }).MarginSpec("20 10 0 35"),


                                                                x.Button()
                                                                .Text("Cancel")
                                                                .Width(120)
                                                                .Icon(Icon.ArrowRefresh)
                                                                .OnClientClick("this.up('form').getForm().reset();")
                                                                .MarginSpec("20 10 0 10")
                                                                ),

                                 x.Window()
                                .ID("SecBondSchemeFund")
                                .Title("'Scheme-Fund' List")
                                .Width(990)
                                .Height(720)
                                // .AutoScroll(true)
                                .X(0)
                                .Y(0)
                                .Modal(true)
                                .AutoRender(false)
                                .Collapsible(true)
                                .Maximizable(true)
                                .Hidden(true)
                                .Loader(x.ComponentLoader()
                                .Mode(LoadMode.Frame)
                                .LoadMask(lm => lm.ShowMask = true)
                                       )
                                    .Items(

                                      x.FieldSet()
                                       .Width(950)
                                    .Height(650)
                                .MarginSpec("0 0 0 0")
                                .Defaults(dd =>
                                { dd.Add(new Parameter("LabelWidth", "115")); })

                                .Items(

                                    x.Button()
                                    .Text("View Scheme-Fund Accounts")
                                    .Icon(Icon.ArrowRefresh)
                                    .MarginSpec("5 0 5 10")
                                    .Width(300)
                                    .DirectEvents(de =>
                                    {
                                        de.Click.Url = Url.Action("ReadSchemeFund");
                                        de.Click.Success = "onSuccess(App.SecBondSchemeFundGrid, result.data);";
                                    }),

                                    x.GridPanel()
                                    .ID("SecBondSchemeFundGrid")
                                    .Frame(true)
                                    .Width(900)
                                    .Height(600)
                                    .MarginSpec("10 0 0 10")
                                    .Plugins(
                                    x.FilterHeader()
                                        )
                                    .Store(
                                    x.Store()
                                    .AutoLoad(true)
                                    .ID("SecBondSFStore")
                                    .Model(
                                    x.Model()
                                    .Fields(
                                        x.ModelField().Name("Scheme_Fund_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Scheme_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Scheme_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Fund_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Fund_Name").Type(ModelFieldType.String)
                                            )
                                       )
                                    .ServerProxy(
                                    x.AjaxProxy()
                                    .Url(Url.Action("ReadSchemeFund"))
                                            )
                                            //.PageSize(10)
                                            )
                                    .BottomBar(
                                    x.PagingToolbar()
                                             )
                    .Refresh()
                    .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { App.frm_SecBondPartial_main.getForm().loadRecord(selected[0]);App.SecBondSchemeFund.hide(); }")

                    .ColumnModel(x.Column().DataIndex("Scheme_Fund_Id").Text("ID").Width(100))
                    .ColumnModel(x.Column().DataIndex("Scheme_Id").Text("SCHEME ID").Width(0))
                    .ColumnModel(x.Column().DataIndex("Fund_Id").Text("FUND ID").Width(0))
                    .ColumnModel(x.Column().DataIndex("Scheme_Name").Text("SCHEME NAME").Width(600))
                    .ColumnModel(x.Column().DataIndex("Fund_Name").Text("FUND NAME").Width(200))
                    )
                    )
            )
)












