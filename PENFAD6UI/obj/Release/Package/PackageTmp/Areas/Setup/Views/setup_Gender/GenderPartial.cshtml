@using PENFAD6DAL.Repository.Setup.SystemSetup


    @model IEnumerable<setup_GenderRepo>

    @{
        var gender = new setup_GenderRepo();
        var x = Html.X();
    }

    @(x.FormPanel()
                    .ID("gender")
                    .ColumnWidth(0.6)
                    .Title("Setup Gender")
                    .Frame(true)
                    .Closable(true)
                    .Layout(LayoutType.Column)
                    .MarginSpec("0 0 0 0")
                     .Width(850)
                     .Height(550)
                    .FieldDefaults(fd =>
                    {
                        fd.LabelAlign = LabelAlign.Top;
                        fd.MsgTarget = MessageTarget.Side;
                    })

                    .Items(

                            x.GridPanel()
                                    .ID("genderGrid")
                                    .Title("View Gender List")
                                    .Frame(true)
                                    .Width(510)
                                    .MarginSpec("10 0 0 10")
                                    .Height(500)
                                    .Store(
                                        x.Store()
                                            .AutoLoad(true)
                                            .ID("genderStore")
                                    .DataSource(Model)
                                    .Model(
                                        x.Model()
                                            .Fields(
                                                x.ModelField().Name("Gender_ID").Type(ModelFieldType.String),
                                                x.ModelField().Name("Gender").Type(ModelFieldType.String)
                                                )

                                    )
                                    .ServerProxy(
                                           Html.X().AjaxProxy()
                                           .Url(Url.Action("Read"))
                                          )

                                    .PageSize(10)
                            )
                            .Refresh()
                            .BottomBar(
                                Html.X().PagingToolbar()
                            )
                            .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { this.up('form').getForm().loadRecord(selected[0]); }")
                            .ColumnModel(x.Column().DataIndex("Gender_ID").Text("GENDER ID").Width(0))
                            .ColumnModel(x.Column().DataIndex("Gender").Text("GENDER").Width(130)),

                            x.FieldSet()
                               // .ColumnWidth(0.4)
                                .WidthSpec("auto")
                                .Height(510)
                                .Title("Add/Edit Gender")
                                .MarginSpec("0 0 0 10")
                                .Defaults(dd =>
                                { dd.Add(new Parameter("LabelWidth", "115")); })

                                .Items(
                                    x.Hidden().Name("Gender_ID"),

                                    x.TextField()
                                        .Name("Gender")
                                        .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                        .Width(290)
                                        .FieldLabel("GENDER")
                                        .AllowBlank(false)
                                        .BlankText("Gender is required.")
                                    )

                                .Items(
                                    x.Button()
                                        .Text("Save")
                                        .Width(110)
                                        .Icon(Icon.Add)
                                        .DirectEvents(de =>
                                        {
                                            de.Click.Url = Url.Action("SaveRecord");

                                        }).MarginSpec("70 10 0 0"),
                                    x.Button()
                                        .Text("Delete")
                                        .Icon(Icon.Delete)
                                        .Width(110)
                                        .DirectEvents(de =>
                                        {
                                            de.Click.Url = Url.Action("DeleteRecord");
                                            de.Click.Confirmation.ConfirmRequest = true;
                                            de.Click.Confirmation.Title = "Delete Record";
                                            de.Click.Confirmation.Message = "Are you sure you want to delete?";
                                        }).MarginSpec("70 10 0 0"),

                                    x.Button()
                                        .Text("Clear")
                                        .Width(90)
                                        .Icon(Icon.ArrowRefresh)
                                        .OnClientClick("this.up('form').getForm().reset();")
                                        .MarginSpec("70 10 0 0")
                               
                        )
                )
    )

















