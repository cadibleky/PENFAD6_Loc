
@using PENFAD6DAL.Repository.Setup.PfmSetup,
@using PENFAD6DAL.Repository.CRM.Employee,
@using PENFAD6DAL.Repository.Setup.SystemSetup


@model IEnumerable<crm_BeneNextRepo>

@{
    var SchemeRepo = new pfm_VestingRuleRepo();
    var RelationRepo = new setup_RelationshipRepo();
    var FeeRepo = new pfm_FeesRepo();
    var x = Html.X();
}
<script>
    var onSuccess = function (grid, data) {
        grid.show();
        grid.getStore().loadData(data);
    };
</script>


@(x.FormPanel()
            .ID("frmEmployeePasswordsmsemployee")
            .Title("SMS Blast - Employee")
            .Frame(true)
            .Closable(true)
            .AutoScroll(true)
            //.Layout(LayoutType.Column)
            .MarginSpec("0 0 0 0")
            .Width(1600)
            .Height(1400)
            .FieldDefaults(fd =>
            {
                fd.LabelAlign = LabelAlign.Top;
                fd.MsgTarget = MessageTarget.Side;
            })

                 .Items(
                         x.FieldSet()
                        .Width(600)
                        .Collapsible(true)
                        .Height(500)
                        //.Layout(LayoutType.Column)
                        .Title("SMS Blast")
                        .MarginSpec("0 0 0 10")
                        .Defaults(dd =>
                        { dd.Add(new Parameter("LabelWidth", "115")); })

                            .Items(

                            x.Button()
                            .Text("Select Scheme")
                            .Width(200)
                            .Icon(Icon.ApplicationFormAdd)
                            .TabIndex(28)
                            .Handler("App.win_EmployeeP_Employeesms.show(this);")
                            .MarginSpec("10 10 10 10"),

                                    x.TextField().Name("Scheme_Id").FieldLabel("SCHEME ID").ReadOnly(true).FieldStyle("text-transform: uppercase").MarginSpec("0 10 0 20").Width(200)
                                    .StyleSpec("color:#333; font-size: 20px; font-weight: bold").TabIndex(1),

                                    //x.TextField().Name("Employer_Name").FieldLabel("Employer Name").ReadOnly(true).FieldStyle("text-transform: uppercase").MarginSpec("0 10 0 20").Width(500)
                                    //.StyleSpec("color:#333; font-size: 20px; font-weight: bold").TabIndex(1),

                                    x.TextField().Name("Scheme_Name").FieldLabel("Scheme Name").ReadOnly(true).FieldStyle("text-transform: uppercase").MarginSpec("0 10 0 20").Width(500)
                                    .StyleSpec("color:#333; font-size: 20px; font-weight: bold").TabIndex(1),

                                    // x.Hidden().Name("Scheme_Id"),

                                    x.TextArea().Name("Message").FieldLabel("Message").ReadOnly(false).MarginSpec("0 10 0 20").Width(500)
                                    .StyleSpec("color:#333; font-size: 20px; font-weight: bold"),


                            x.Button()
                            .Text("Send")
                            .Width(150)
                            .Icon(Icon.ApplicationAdd)
                            .DirectEvents(de =>
                            {
                                de.Click.Url = Url.Action("SendEmailIndi");
                                de.Click.Timeout = 120000000;

                            }).MarginSpec("50 10 0 20")
                            .Listeners(l => l.Click.Handler = "Ext.net.Mask.show({msg: 'Sending SMS... Please wait.'})"),


                        x.Button()
                                .Text("Clear")
                                .Width(150)
                                 .Icon(Icon.Cancel)
                                .OnClientClick("this.up('form').getForm().reset();")
                                .MarginSpec("50 10 0 20")

                                )

                                )

                .Items(x.Window()
                .ID("win_EmployeeP_Employeesms")
                .Icon(Icon.Application)
                .Title("Scheme List")
                .Width(1000)
                .Height(500)
                .Modal(true)
                .AutoRender(false)
                .Hidden(true)
                .Items(x.GridPanel()
                            .ID("EmployeePassword_employeesms_grid")
                            .Border(true)
                            .WidthSpec("Auto")
                            .Height(450)
                            .MarginSpec("10 0 0 10")
                            .TopBar(Html.X().Toolbar()
                                        .Items(Html.X().Button()
                                                    .Text("View Schemes")
                                                    .Width(300)
                                                    .Icon(Icon.ApplicationViewDetail)
                                                    .DirectEvents(de =>
                                                    {
                                                        de.Click.Url = Url.Action("GetESFEmployeeListscheme");
                                                        de.Click.Success = "onSuccess(App.EmployeePassword_employeesms_grid, result.data);";
                                                        //de.Click.ExtraParams.Add(new { containerId = "panel_majornav" });
                                                    })
                                                        //.Handler("#{panel_majornav}.reload();")
                                                        )//end button
                                                    )// end topbar
                            .Store(Html.X().Store()
                                        .ID("EP_employeesms_store")
                                        .AutoLoad(false)
                                        .Model(Html.X().Model()
                                                .Fields(

                                                         new ModelField("Scheme_Name", ModelFieldType.String),

                                                         new ModelField("Scheme_Id", ModelFieldType.String)
                                                        )//end fields
                                                )//end model
                                                 // .Reader(reader => reader.Add(Html.X().ArrayReader()))//end reader
                                                .ServerProxy(Html.X().AjaxProxy()
                                                                    .Url(Url.Action("GetESFEmployeeListscheme"))

                                                                )// END SERVER PROXY
                                                                 // .PageSize(10)
                                    )//end  store

                            .ColumnModel(

                                    Html.X().Column().Text("Scheme Name").DataIndex("Scheme_Name").Width(350),

                                     Html.X().Column().Text("Scheme Id").DataIndex("Scheme_Id").Width(100)

                                    )//end columnmodel
                            .View(Html.X().GridView().StripeRows(true).TrackOver(true))
                            //.Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { this.up('form').getForm().loadRecord(selected[0]); }")
                            .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { App.frmEmployeePasswordsmsemployee.getForm().loadRecord(selected[0]); App.win_EmployeeP_Employeesms.hide(true); }")
                            .Refresh()
                            .BottomBar(Html.X().PagingToolbar())
                            .Plugins(x.FilterHeader())

                        )// end grid panel

        )
)









