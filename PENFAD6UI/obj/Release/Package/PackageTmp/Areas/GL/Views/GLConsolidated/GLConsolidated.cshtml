
@using PENFAD6DAL.Repository.Setup.PfmSetup


@model IEnumerable<pfm_Scheme_FundRepo>

@{
    var x = Html.X();
    var pfm_schemerepo = new pfm_SchemeRepo();
    var pfm_fundrepo = new pfm_FundRepo();

    List<SelectListItem> SchemeFundStatusList = new List<SelectListItem>();
    SchemeFundStatusList.Add(new SelectListItem
    {
        Text = "ACTIVE",
        Value = "ACTIVE"
    });
    SchemeFundStatusList.Add(new SelectListItem
    {
        Text = "INACTIVE",
        Value = "INACTIVE"
    });
}

@(x.FormPanel()
            .ID("SchemeFundPanGLcon")
            .WidthSpec("auto")
            .Title("Merge GL Accounts")
            .Frame(true)
            .AutoScroll(true)
            .Closable(true)
            .Layout(LayoutType.Column)
            .MarginSpec("0 0 0 0")
            .Width(1400)
            .Height(600)
            .FieldDefaults(fd =>
            {
                fd.LabelAlign = LabelAlign.Top;
                fd.MsgTarget = MessageTarget.Side;
            })

            .Items(

                    x.GridPanel()
                            .ID("SchemeFundGridGLcon")
                            .Title("View List")
                            .Frame(true)
                            .Width(730)
                            .MarginSpec("10 0 0 10")
                            .Height(500)
                            .Store(
                                x.Store()
                                    .AutoLoad(true)
                                    .ID("SchemeFundStoreGLcon")
                            // .DataSource(Model)
                            .Model(
                                x.Model()
                                    .Fields(
                                        x.ModelField().Name("TID").Type(ModelFieldType.String),
                                        x.ModelField().Name("Account_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Scheme_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Scheme_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("GL_Account_No").Type(ModelFieldType.String),
                                        x.ModelField().Name("GL_Account_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Maker_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Make_Date").Type(ModelFieldType.Date)
                                        )

                            )
                            .ServerProxy(
                                   Html.X().AjaxProxy()
                                   .Url(Url.Action("Read"))
                                  )
                            .PageSize(10)

                    )
                     .BottomBar(
                        Html.X().PagingToolbar()
                    )
                    .Plugins(
                        x.FilterHeader()
                    )
                    .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { this.up('form').getForm().loadRecord(selected[0]); App.savebtn.hide();}")
                    .ColumnModel(x.Column().DataIndex("Account_Name").Text("Account Name").Width(400))
                    .ColumnModel(x.Column().DataIndex("Scheme_Name").Text("Scheme").Width(400))
                    .ColumnModel(x.Column().DataIndex("TID").Text("TID").Width(400))
                    .ColumnModel(x.Column().DataIndex("GL_Account_Name").Text("GL ACCOUNT NAME").Width(400)),


    x.FieldSet()
        .WidthSpec("auto")
        .Collapsible(true)
        .Region(Region.North)
        .Height(510)
        .Title("Add/Remove Account")
        .MarginSpec("0 20 0 20")
        .Defaults(dd =>
        { dd.Add(new Parameter("LabelWidth", "115")); })

        .Items(
            
           x.Hidden().Name("TID"),

            x.TextField().Name("Account_Name").FieldLabel("Merged Account Name").MarginSpec("0 20 10 10").AllowBlank(false).Width(400),

            x.ComboBox().ID("txtBankSF_SFIDGLcon").Name("Scheme_Id") .Width(400).FieldLabel("Scheme").Items(pfm_schemerepo.GetSchemeList().Select(c => new ListItem(c.Scheme_Name, c.Scheme_Id))).Editable(false).MarginSpec("0 20 10 10").AllowBlank(false).BlankText("Scheme is required.").AutoFitErrors(true)
              .Listeners(ls =>
                              ls.Change.Handler = "App.cboBankSF_GLANOGLcon.clearValue(); App.cboBankSF_GLANOGLcon.getStore().load();"),

            x.ComboBox().Name("GL_Account_No").ID("cboBankSF_GLANOGLcon")
                                                .FieldLabel("GL Account Name")
                                                .Width(400)
                                                .Editable(false)
                                                .TypeAhead(true)
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .TriggerAction(TriggerAction.All)
                                                .DisplayField("name")
                                                .ValueField("id")
                                                .BlankText("GL Account is required.")
                                                .EmptyText("No GL Account Available...")
                                                .ValueNotFoundText("No GL Account Available...").MarginSpec("30 0 0 10")
                                                .Store(Html.X().Store()
                                                    .AutoLoad(false)
                                                    .Model(Html.X().Model()
                                                        .IDProperty("Id")
                                                        .Fields(
                                                            new ModelField("id", ModelFieldType.String) { Mapping = "Id" },
                                                            new ModelField("name", ModelFieldType.String) { Mapping = "Name" }
                                                        )
                                                    )
                                                    .Proxy(Html.X().AjaxProxy()
                                                        .Url(Url.Action("GetGLAB"))
                                                        .Reader(Html.X().JsonReader().RootProperty("data"))
                                                    )
                                                    .Parameters(ps =>
                                                        ps.Add(new StoreParameter("Scheme_Id", "App.txtBankSF_SFIDGLcon.getValue()", ParameterMode.Raw))
                                                    )
                                                    .Listeners(ls =>
                                                                    ls.Load.Handler = @"var combo = App.cboBankSF_GLANOGLcon; 
                                                                                        combo.setValue(records[0].get(combo.valueField));"

                                                    )
                                               )
            )
        .Items(
        x.Panel()
        .WidthSpec("100%")
        .Height(40)
        .StyleSpec("position: absolute; bottom: 0; left: 0;")

        .Items(


    x.Button()
        .Text("Add")
        .ToolTip("Add Account")
        .ID("savebtn")
        .Width(110)
        .Icon(Icon.Add)
        .DirectEvents(de =>
        {
            de.Click.Confirmation.ConfirmRequest = true;
            de.Click.Confirmation.Title = "Add";
            de.Click.Confirmation.Message = "Add Account?";
            de.Click.Url = Url.Action("SaveRecord");

        }).MarginSpec("5 10 10 5"),
            x.Button()
                .Text("Remove")
                .Width(110)
                .Icon(Icon.Delete)
                .DirectEvents(de =>
                {
                    de.Click.Url = Url.Action("DeleteRecord");
                    de.Click.Confirmation.ConfirmRequest = true;
                    de.Click.Confirmation.Title = "Remove Account";
                    de.Click.Confirmation.Message = "Are you sure you want to Remove?";
                    de.Click.Success = "App.savebtn.show()";
                }).MarginSpec("5 10 10 5"),
            x.Button()
                    .Text("Clear")
                    .Width(90)
                    .Icon(Icon.ArrowRefresh)
                    .OnClientClick("this.up('form').getForm().reset(); App.savebtn.show();")
                    .MarginSpec("5 10 10 5")

            )
            )
                 )


)


