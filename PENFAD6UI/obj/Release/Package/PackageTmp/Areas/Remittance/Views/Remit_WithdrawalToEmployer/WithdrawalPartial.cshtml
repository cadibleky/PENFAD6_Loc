
@using PENFAD6DAL.Repository.Remittance.Contribution
@using PENFAD6DAL.Repository.Setup.PfmSetup
@using PENFAD6DAL.Repository.CRM.Employer
@using PENFAD6DAL.Repository.CRM.Employee


@model IEnumerable<Remit_PurchaseRepo>

@{
    var ESF = new crm_EmployerSchemeFundRepo();
    var scheme = new pfm_SchemeRepo();
    var fund = new pfm_FundRepo();
    var employee = new crm_EmployeeRepo();
    var x = Html.X();
}

<script>

        var onSuccess = function (grid, data) {
            grid.show();
            grid.getStore().loadData(data);
        };

</script>
@(x.FormPanel()
                        .ID("frm_WithdrawalTEP")
                        .ColumnWidth(0.4)
                        .Title("Benefit Transfer To Employer")
                        .Frame(true)
                        .Closable(true)
                        .AutoScroll(true)
                        .MarginSpec("0 0 0 0")
                        .Width(1200)
                        .Height(1700)
                        .FieldDefaults(fd =>
                        {
                            fd.LabelAlign = LabelAlign.Top;
                            fd.MsgTarget = MessageTarget.Side;
                        })
                        .Items(
                                    x.FieldSet()
                                    .ColumnWidth(0.7)
                                    .Collapsible(true)
                                    .Height(950)
                                    .Width(1000)
                                    .Frame(true)
                                    .Title("Benefit Transfer To Employer")
                                    .MarginSpec("0 0 0 10")
                                    .Defaults(dd =>
                                    { dd.Add(new Parameter("LabelWidth", "115")); })

                                    .Items(
                                     x.FieldSet()
                                    .Collapsible(true)
                                    .Height(400)
                                    .Width(900)
                                    .Layout(LayoutType.Column)
                                    .Title("Account Details")
                                    .MarginSpec("0 0 0 10")
                                    .Defaults(dd =>
                                    { dd.Add(new Parameter("LabelWidth", "115")); })

                                        .Items(
                                        x.Hidden().Name("Withdrawal_No"),
                                        x.Hidden().Name("Scheme_Id"),
                                        x.Hidden().Name("Fund_Id"),

                                        //x.Hidden().Name("Total_Unit_Balance").ID("Withdrawal_T_UnitB"),
                                        //x.Hidden().Name("Total_Con_Balance"),

                                        x.Hidden().Name("Scheme_Fund_Id").ID("WithdrawalTEP_SFID")
                                        .Listeners(ls =>
                                                                                       ls.Change.Handler = "App.wTEPay_GLB.clearValue(); App.wTEPay_GLB.getStore().load();"),


                                         x.Button()
                                        .Text("Select Account")
                                        .Width(250)
                                        .Icon(Icon.ApplicationFormAdd)
                                        .TabIndex(28)
                                        .Handler("App.withdrawalTE_ESF_win.show(this);")
                                        .MarginSpec("0 800 10 10"),

                                        x.TextField()
                                        .Name("Employee_Name")
                                        .Width(450)
                                        .FieldLabel("Name of Employee")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 5 10")
                                        .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                        .BlankText("Account must be selected."),


                                        x.TextField()
                                        .Name("ESF_Id")
                                        .Width(250)
                                        .FieldLabel("Employee Account ID")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 5 10")
                                        .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                        .BlankText("Account must be selected.")
                                          .DirectEvents(de =>
                                          {
                                              de.Change.Url = Url.Action("GetUPrice");
                                          })  ,


                                        x.TextField()
                                        .Name("Scheme_Name")
                                        .Width(450)
                                        .FieldLabel("Scheme")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 5 10")
                                        .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                        .BlankText("'Scheme' must be selected."),

                                         x.TextField()
                                        .Name("Fund_Name")
                                        .Width(250)
                                        .FieldLabel("Fund")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 5 10")
                                        .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                        .BlankText("'Scheme' must be selected."),

                                        x.TextField()
                                        .Name("Employee_Con_Balance")
                                        .Width(180)
                                        .FieldLabel("Employee Contribution")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 5 10"),

                                        x.TextField()
                                        .Name("Employer_Con_Balance")
                                        .Width(170)
                                        .FieldLabel("Employer Contribution")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 5 10"),


                                        x.TextField()
                                        .Name("Employee_Unit_Balance")
                                        .Width(170)
                                        .FieldLabel("Employee Unit")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 5 10"),

                                         x.TextField()
                                        .Name("Employer_Unit_Balance")
                                        .Width(170)
                                        .FieldLabel("Employer Unit")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 5 10"),

                                        x.TextField().Name("Total_Unit_Balance")
                                        .ID("WithdrawalTE_T_UnitB")
                                         .Width(180)
                                        .FieldLabel("Total Unit Balance")
                                        .MarginSpec("3 0 5 10").ReadOnly(true),

                                         x.TextField()
                                        .Name("Total_Con_Balance")
                                        .Width(170)
                                        .FieldLabel("Total Contribution")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 5 10"),

                                        x.TextField().Name("Unit_Price")
                                        .ID("WithdrawalPTE_UnitP").FieldLabel("Current Unit Price")
                                         .Width(170)
                                        .MarginSpec("3 0 5 10").ReadOnly(false)
                                             .DirectEvents(de =>
                                             {
                                                 de.Change.Url = Url.Action("GetUPricePay");
                                             }),

                                         x.NumberField().DecimalPrecision(2)
                                        .Name("Total_Benefit").ID("WithdrawalTE_TotalB")
                                        .Width(170)
                                        .FieldLabel("Total Benefit(Amount)")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 5 10")

                                        ),

                                       //&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

                                       x.FormPanel().ID("frm_WithdrawalTEP2")
                                        .Height(170)
                                        .Title("Employer Account Details")
                                        .Width(900)
                                        .Layout(LayoutType.Column)
                                        .MarginSpec("10 10 10 10")
                                        .Defaults(dd =>
                                        { dd.Add(new Parameter("LabelWidth", "115")); })

                                        .Items(

                                        x.Hidden().Name("ES_Id"),
                                        x.Hidden().Name("Scheme_Id_2"),
                                        

                                        x.TextField()
                                        .Name("Employer_Name")
                                        .Width(400)
                                        .FieldLabel("Name of Employer")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 10 10")
                                        .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                        .BlankText("'Employer Scheme' must be selected."),

                                        x.TextField()
                                        .Name("Scheme_Name_2")
                                        .Width(440)
                                        .FieldLabel("Scheme")
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .MarginSpec("3 0 10 10")
                                        .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                        .BlankText("'Employer Scheme' must be selected."),



                                        x.Button()
                                        .Text("Select 'Employer Scheme'")
                                        .Width(240)
                                        .Icon(Icon.ApplicationFormAdd)
                                        .TabIndex(28)
                                        .Handler("App.ReceiptemployerSchemeTE.show(this);")
                                        .MarginSpec("3 0 10 10")
                                        ),
                                    //&&&&&&&&&&&&&&&&&&&&&&&&&

                                    x.FieldSet()
                                    .Collapsible(true)
                                    .Height(290)
                                    .Width(900)
                                    .Layout(LayoutType.Column)
                                    .Title("Benefit Transfer Details")
                                    .MarginSpec("0 0 0 10")
                                    .Defaults(dd =>
                                    { dd.Add(new Parameter("LabelWidth", "115")); })

                            .Items(

                            x.DateField()
                            .Name("Trans_Request_Date")
                            .Width(220)
                            .Editable(false)
                            .AllowBlank(false)
                            .EmptyText("Select  Date")
                            .FieldLabel("Actual Date")
                            .MarginSpec("3 0 10 10"),

                            x.Hidden().Name("Type").ID("WithdrawalTEPartial_Type")
                            //.Width(150).SelectedItems("UNIT").ReadOnly(true).Text("UNIT")
                            //.FieldLabel("Amount / Unit?")
                            .MarginSpec("3 0 10 10")
                              //.Items("AMOUNT","UNIT")
                              // .Listeners(l => l.Select.Handler = "if (App.WithdrawalPartial_Type.getValue() == 'AMOUNT') {App.WithdrawalPartial_TotalWithdrawal_Display.setFieldLabel('Unit');} else {App.WithdrawalPartial_TotalWithdrawal_Display.setFieldLabel('Amount');}")
                              .DirectEvents(de =>
                              {

                                  de.Change.Url = Url.Action("GetUnit_Amount");

                              }),

                            x.NumberField().DecimalPrecision(4).Name("Total_Withdrawal_Temp").ID("WithdrawalTEPartial_TotalWithdrawal")
                            .Width(200).AllowBlank(false)
                            .EmptyText("Enter Withdrawal")
                            .FieldLabel("Withdrawal-Units")
                            .MarginSpec("3 0 10 10")
                             .DirectEvents(de =>
                             {

                                 de.Change.Url = Url.Action("GetUnit_Amount");

                             }),


                            x.NumberField().Name("Total_Withdrawal_Display").ID("WithdrawalTEPartial_TotalWithdrawal_Display")
                            .Width(120).AllowBlank(false).FieldLabel(" ").ReadOnly(true).DecimalPrecision(2 ).FieldLabel("Amount")
                            .MarginSpec("3 0 10 10"),



                                                                    ///////////////////////
                                                                    x.ComboBox().Name("GL_Account_No").ID("wTEPay_GLB")
                                                                    .FieldLabel("GL Bank Account")
                                                                    .Width(350)
                                                                    .Editable(false)
                                                                    .TypeAhead(true)
                                                                    .QueryMode(DataLoadMode.Local)
                                                                    .ForceSelection(true)
                                                                    .TriggerAction(TriggerAction.All)
                                                                    .DisplayField("name")
                                                                    .ValueField("id")
                                                                    .BlankText("GL Bank Account is required.")
                                                                    .EmptyText("No GL Bank Account Available...")
                                                                    .ValueNotFoundText("No GL Bank Account Available...").MarginSpec("3 0 10 10")
                                                                      .Listeners(ls =>
                                                                                       ls.Change.Handler = "App.wTEPay_GLBalance.clearValue(); App.wTEPay_GLBalance.getStore().load();")

                                                                    .Store(Html.X().Store()
                                                                        .AutoLoad(false)
                                                                        .Model(Html.X().Model()
                                                                            .IDProperty("wTEPay_GLB_gId")
                                                                            .Fields(
                                                                                new ModelField("id", ModelFieldType.String) { Mapping = "wTEPay_GLB_gId" },
                                                                                new ModelField("name", ModelFieldType.String) { Mapping = "gName" }
                                                                            )
                                                                        )
                                                                        .Proxy(Html.X().AjaxProxy()
                                                                            .Url(Url.Action("GetGLASFListBTE"))
                                                                            .Reader(Html.X().JsonReader().RootProperty("data"))
                                                                        )
                                                                        .Parameters(ps =>
                                                                            ps.Add(new StoreParameter("Scheme_Fund_Id", "App.WithdrawalTEP_SFID.getValue()", ParameterMode.Raw))
                                                                        )
                                                                        .Listeners(ls =>
                                                                                        ls.Load.Handler = @"var combo = App.wTEPay_GLB; 
                                                                                                            combo.setValue(records[0].get(combo.valueField)); App.wTEPay_GLBalance.clearValue(); App.wTEPay_GLBalance.getStore().load();"

                                                                        )

                                                                   )
                                                            ,

                                            x.ComboBox().Name("GL_Balance").ID("wTEPay_GLBalance")
                                                .FieldLabel("GL Bank Account Balance")
                                                .Width(350)
                                                .Editable(false)
                                                .ReadOnly(true)
                                                .TypeAhead(true)
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .TriggerAction(TriggerAction.All)
                                                .DisplayField("id")
                                                .ValueField("name")
                                                .BlankText("Select GL Bank Account.")
                                                .ValueNotFoundText("No GL Bank Account...").MarginSpec("3 0 10 10")
                                                .Store(Html.X().Store()
                                                    .AutoLoad(false)
                                                    .Model(Html.X().Model()
                                                        .IDProperty("WTEPaymId")
                                                        .Fields(
                                                            new ModelField("id", ModelFieldType.String) { Mapping = "WTEPaymId" },
                                                            new ModelField("name", ModelFieldType.String) { Mapping = "mName" }
                                                        )
                                                    )
                                                    .Proxy(Html.X().AjaxProxy()
                                                        .Url(Url.Action("GetGLaccPay"))
                                                        .Reader(Html.X().JsonReader().RootProperty("data"))
                                                    )
                                                    .Parameters(ps =>
                                                        ps.Add(new StoreParameter("GL_Account_No", "App.wTEPay_GLB.getValue()", ParameterMode.Raw))
                                                    )
                                                    .Listeners(ls =>
                                                                    ls.Load.Handler = @"var combo = App.wTEPay_GLBalance; 
                                                                                        combo.setValue(records[0].get(combo.valueField));"

                                                    )
                                               )
                                            ,

                              //////////////////////////


                              // x.NumberField()
                              //.Name("Tax")
                              //.Width(120)
                              //.AllowBlank(false)
                              //.EmptyText("Tax")
                              //.FieldLabel("Tax(%)")
                              //.MarginSpec("3 0 10 10")
                              //.FieldStyle("TEXT-TRANSFORM:UPPERCASE"),

                              // x.Checkbox().ID("frmWD_Suspense").FieldLabel("Move Balance to Employer")
                              // .MarginSpec("3 0 10 10").LabelAlign(LabelAlign.Right)
                              // .Checked(false),

                              x.TextArea()
                            .Name("Withdrawal_Reason")
                            .Width(850)
                            .Height(50)
                            .AllowBlank(false)
                            .EmptyText("Enter Reason")
                            .FieldLabel("Reason for withdrawal")
                            .MarginSpec("3 0 10 10")
                            .FieldStyle("TEXT-TRANSFORM:UPPERCASE")
                                )
                            ),







                        x.FieldSet()
                        .Height(80)
                         .Width(1000)
                        .Layout(LayoutType.Column)
                        .MarginSpec("10 10 10 10")
                        .Defaults(dd =>
                        { dd.Add(new Parameter("LabelWidth", "115")); })

                        .Items(
                            x.Button()
                                .Text("Submit for Approval")
                                .Width(250)
                                .Icon(Icon.Add)
                                .DirectEvents(de =>
                                {
                                    de.Click.Confirmation.ConfirmRequest = true;
                                    de.Click.Confirmation.Title = "Submit";
                                    de.Click.Confirmation.Message = "Submit Request?";
                                    de.Click.Url = Url.Action("SaveRecord");

                                }).MarginSpec("20 10 0 20"),


                            x.Button()
                                .Text("Cancel")
                                .Width(250)
                                .Icon(Icon.ArrowRefresh)
                                .OnClientClick("this.up('form').getForm().reset();")
                                .MarginSpec("20 10 0 0")
                        )

                                 //windows for employees
                                 .Items(Html.X().Window()
                                 .ID("withdrawalTE_ESF_win")
                                 .Title("Accounts")
                                .Width(1300)
                                .Height(720)
                                .Modal(true)
                                .AutoRender(false)
                                .Collapsible(true)
                                .Maximizable(true)
                                .Hidden(true)
                                .Loader(x.ComponentLoader()
                                .Mode(LoadMode.Frame)
                                .LoadMask(lm => lm.ShowMask = true)
                                       )
                                    .Items(
                    x.FieldSet()
                    .Title("Search")
                    .Width(800)
                    .Height(100)
                    .Items(
                            x.Panel()
                                .Layout(LayoutType.HBox)
                                .Items(
                                        x.ComboBox().Name("Employer_Id")
                                                .ID("withdrawalTE_cmbEmployerId")
                                                .FieldLabel("Employer Name")
                                                .QueryMode(DataLoadMode.Local)
                                                .TriggerAction(TriggerAction.All)
                                                .MarginSpec("0 30 0 10").TabIndex(5).Width(400)
                                                .AllowBlank(false)
                                                .FieldStyle("text-transform: uppercase")
                                                .Items(employee.GetEmployerList().Select(d => new ListItem(d.Employer_Name, d.Employer_Id)))
                                                // .Listeners(ls =>
                                                //              ls.Change.Handler = "App.withdrawal_cmbSFId.clearValue(); App.withdrawal_cmbSFId.getStore().load();")
                                                ,

                                    //x.ComboBox().Name("Scheme_Fund_Id")
                                    //       .ID("withdrawal_cmbSFId")
                                    //       .FieldLabel("Scheme - Fund")
                                    //       .Editable(false)
                                    //       .TypeAhead(true)
                                    //       .QueryMode(DataLoadMode.Local)
                                    //       .ForceSelection(true)
                                    //       .TriggerAction(TriggerAction.All)
                                    //       .DisplayField("name")
                                    //       .ValueField("id")
                                    //       .BlankText("Product is required.")
                                    //       .MarginSpec("0 30 0 10").TabIndex(5).Width(450)
                                    //       .Store(Html.X().Store()
                                    //                               .AutoLoad(false)
                                    //                               .Model(Html.X().Model()
                                    //                                   .IDProperty("Id")
                                    //                                   .Fields(
                                    //                                       new ModelField("id", ModelFieldType.String) { Mapping = "Id" },
                                    //                                       new ModelField("name", ModelFieldType.String) { Mapping = "Name" }
                                    //                                   )
                                    //                               )
                                    //                               .Proxy(Html.X().AjaxProxy()
                                    //                                   .Url(Url.Action("FilterESGrid"))
                                    //                                   .Reader(Html.X().JsonReader().RootProperty("data"))
                                    //                               )
                                    //                               .Parameters(ps =>
                                    //                                   ps.Add(new StoreParameter("Employer_Id", "App.withdrawal_cmbEmployerId.getValue()", ParameterMode.Raw))
                                    //                               )
                                    //                               .Listeners(ls =>
                                    //                                               ls.Load.Handler = @"var combo = App.withdrawal_cmbSFId; 
                                    //                                                                   combo.setValue(records[0].get(combo.valueField));"

                                    //                               )

                                    //                          ),
                                    x.Button()
                                    .Text("View Employee Accounts")
                                    .Icon(Icon.ArrowRefresh)
                                    .MarginSpec("30 0 5 10")
                                    .Width(240)
                                    .DirectEvents(de =>
                                    {
                                        de.Click.Url = Url.Action("ReadESchemeFund");
                                        de.Click.Success = "onSuccess(App.WithdrawalTEESFGrid, result.data);";
                                        de.Click.ExtraParams.Add(new Parameter("Employer_Id", "App.withdrawalTE_cmbEmployerId.getValue()", ParameterMode.Raw));
                                    })
                                    ),

                                    x.GridPanel()
                                    .ID("WithdrawalTEESFGrid")
                                    .Frame(true)
                                    .Width(1200)
                                    .Height(520)
                                    .MarginSpec("10 0 0 10")
                                    .Plugins(
                                    x.FilterHeader()
                                        )
                                    .Store(
                                    x.Store()
                                    .AutoLoad(true)
                                    .ID("WithdrawalTEESFStore")
                                    // .DataSource(Model)
                                    .Model(
                                    x.Model()
                                    .Fields(
                                         x.ModelField().Name("Employee_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("ESF_ID").Type(ModelFieldType.String),
                                        x.ModelField().Name("Employer_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Employee_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Title").Type(ModelFieldType.String),
                                        x.ModelField().Name("Surname").Type(ModelFieldType.String),
                                        x.ModelField().Name("First_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Other_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Date_Of_Birth").Type(ModelFieldType.Date),
                                        x.ModelField().Name("Schem_Fund_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Scheme_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Scheme_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Fund_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Fund_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("Employee_Con_Balance").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Employer_Con_Balance").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Employee_Unit_Balance").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Employer_Unit_Balance").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Total_Con_Balance").Type(ModelFieldType.Float),
                                        x.ModelField().Name("Total_Unit_Balance").Type(ModelFieldType.Float)
                                            )
                                       )
                                    .ServerProxy(
                                    x.AjaxProxy()
                                    // .Url(Url.Action("ReadEmployeeSchemeFund"))
                                    .Url(Url.Action("ReadESchemeFund", "Remit_Withdrawal"))
                                                              .Reader(Html.X().JsonReader().RootProperty("data")))
                                                              .Parameters(ps =>
                                                              ps.Add(new StoreParameter("Employer_Id", "App.withdrawalTE_cmbEmployerId.getValue()", ParameterMode.Raw))

                                            )
                                            //.PageSize(10)
                                            )
                                    .BottomBar(
                                    x.PagingToolbar()
                                             )
                    .Refresh()
                    .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { App.frm_WithdrawalTEP.getForm().loadRecord(selected[0]);App.withdrawalTE_ESF_win.hide(); }")
                     .ColumnModel(x.Column().DataIndex("Employee_Id").Text("Employee ID").Width(150))
                    .ColumnModel(x.Column().DataIndex("ESF_Id").Text("Employee Account").Width(150))
                    .ColumnModel(x.Column().DataIndex("Surname").Text("SURNAME").Width(200))
                    .ColumnModel(x.Column().DataIndex("First_Name").Text("FIRST NAME").Width(200))
                    .ColumnModel(x.Column().DataIndex("Other_Name").Text("OTHER NAME").Width(150))
                    .ColumnModel(x.Column().DataIndex("Date_Of_Birth").Text("SCHEME ID").Width(100))
                    .ColumnModel(x.Column().DataIndex("Scheme_Name").Text("SCHEME NAME").Width(300))
                    .ColumnModel(x.Column().DataIndex("Fund_Name").Text("FUND NAME").Width(200))
                    .ColumnModel(x.Column().DataIndex("Employer_Id").Text("EMPLOYER").Width(200))
                                            )
                                            ),


                                            x.Window()
                                .ID("ReceiptemployerSchemeTE")
                                .Title("'Employer-Scheme Account' List")
                                .Width(1100)
                                .Height(720)
                                .X(0)
                                .Y(0)
                                .Modal(true)
                                .AutoRender(false)
                                .Collapsible(true)
                                .Maximizable(true)
                                .Hidden(true)
                                .Loader(x.ComponentLoader()
                                .Mode(LoadMode.Frame)
                                .LoadMask(lm => lm.ShowMask = true)
                                       )
                                    .Items(

                         x.FieldSet()
                        .MarginSpec("0 0 0 0")
                        .Defaults(dd =>
                        { dd.Add(new Parameter("LabelWidth", "115")); })

                        .Items(

                                    x.Button()
                                    .Text("View Employer-Scheme Accounts")
                                    .Icon(Icon.ArrowRefresh)
                                    .MarginSpec("5 0 5 10")
                                    .Width(240)
                                    .DirectEvents(de =>
                                    {
                                        de.Click.Url = Url.Action("ReadEmployerScheme");
                                        de.Click.Success = "onSuccess(App.ReceiptempGridTE, result.data);";
                                    }),

                                    x.GridPanel()
                                    .ID("ReceiptempGridTE")
                                    .Frame(true)
                                    .Width(1050)
                                    .Height(620)
                                    .MarginSpec("0 0 0 10")
                                    .Plugins(
                                    x.FilterHeader()
                                        )
                                    .Store(
                                    x.Store()
                                    .AutoLoad(true)
                                    .ID("ReceiptempStoreTE")
                                    // .DataSource(Model)
                                    .Model(
                                    x.Model()
                                    .Fields(
                                        x.ModelField().Name("Employer_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Employer_Name").Type(ModelFieldType.String),
                                        x.ModelField().Name("ES_Id").Type(ModelFieldType.String),
                                        x.ModelField().Name("Scheme_Id_2").Type(ModelFieldType.String),
                                        x.ModelField().Name("Scheme_Name_2").Type(ModelFieldType.String)

                                            )
                                       )
                                    .ServerProxy(
                                    x.AjaxProxy()
                                    .Url(Url.Action("ReadEmployerScheme"))
                                            )
                                    .PageSize(10)
                                            )
                                    .BottomBar(
                                    x.PagingToolbar()
                                             )
                    .Refresh()
                    .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { App.frm_WithdrawalTEP2.getForm().loadRecord(selected[0]);App.ReceiptemployerSchemeTE.hide(); }")
                    .ColumnModel(x.Column().DataIndex("Employer_Id").Text("EMPLOYEE ID").Width(0))
                    .ColumnModel(x.Column().DataIndex("Employer_Name").Text("EMPLOYER NAME").Width(450))
                    .ColumnModel(x.Column().DataIndex("ES_Id").Text("ES ID").Width(0))
                    .ColumnModel(x.Column().DataIndex("Scheme_Id_2").Text("SCHEME ID").Width(0))
                    .ColumnModel(x.Column().DataIndex("Scheme_Name_2").Text("SCHEME NAME").Width(600))
                                            )
                                    )

                                    )
                                )
                     )
            
















