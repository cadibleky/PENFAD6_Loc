
@using PENFAD6DAL.Repository.Remittance.Contribution
@model IEnumerable<Remit_Contribution_Upload_LogRepo>

@{

    int yyyy = Convert.ToInt32(DateTime.Now.Year.ToString());
    List<SelectListItem> YearList = new List<SelectListItem>();
    for (int i = yyyy - 4; i <= yyyy + 10; i++)
    {
        YearList.Add(new SelectListItem
        {
            Text = i.ToString(),
            Value = i.ToString()
        });
    }
    var x = Html.X();
    var y = Html.X();
}
<script>
    var onSuccess = function (grid, data) {
        grid.show();
        grid.getStore().loadData(data);
    };
    var onSuccessgroup = function (grid, data)
    {
        grid.show();
        grid.getStore().loadData(data);
    };
</script>




@(Html.X().FormPanel()
        .ID("frm_remittancebatchdelete")
        .Title("Delete Remittance")
        .Width(1500)
        .BodyPadding(5)
        .AutoScroll(true)
        .Height(750)
        .Closable(true)        

        .Items(
                x.Panel().Width(1400)
                .Layout(LayoutType.Column)
                

        .Items(Html.X().Panel()
                    .ID("remittancedeletepanel_forgrids")
                    .Width(600)
                    .Title("Delete Batch Remittance")
                    .Border(true)
                    .Height(720)
                    .MarginSpec("10 0 0 10")
                    .BodyPadding(5)
                    .TopBar(Html.X().Toolbar()
                            .Items(Html.X().Button()
                                    .ID("btnviewremittanceemployeebatchlog_delete")
                                    .Text("View Remittance Uploads")
                                    .Width(250)
                                    .Icon(Icon.ApplicationViewDetail)
                                    .DirectEvents(de =>
                                    {
                                        de.Click.Url = Url.Action("Get_BatchLogdelete");
                                        de.Click.Success = "onSuccess(App.appbatchloggrid_delete, result.data);";
                                    })
                                    //.Handler("#{emp_list_store}.removeAll();")
                                ////.Handler("#{panel_majornav}.reload();")
                                )//end button
                            )// end topbar

                     //begin role grid
                     .Items(Html.X().GridPanel()
                                    .ID("appbatchloggrid_delete")
                                    //.Hidden(true)
                                    .Border(true)
                                    .Width(600)
                                    .Height(350)
                                    .MarginSpec("10 0 0 10")
                                    .Plugins(
                                    x.FilterHeader()
                                        )
                                    .Store(Html.X().Store()
                                        .ID("deleteemppppbatchstore")
                                        .AutoLoad(false)
                                        .Model(Html.X().Model()
                                            .Fields(
                                                new ModelField("Employer_Name", ModelFieldType.String),
                                                new ModelField("Scheme_Name", ModelFieldType.String),
                                                new ModelField("Employer_Id", ModelFieldType.String),
                                                new ModelField("Total_Contribution", ModelFieldType.Float),
                                                 new ModelField("Total_Contribute", ModelFieldType.Int),
                                                new ModelField("Log_Status", ModelFieldType.String),
                                                new ModelField("Con_Log_Id", ModelFieldType.String),
                                                 new ModelField("Scheme_id", ModelFieldType.String),
                                                new ModelField("ES_Id", ModelFieldType.String)


                                                    )//end fields
                                                )//end model
                                                .Reader(reader =>
                                                    reader.Add(Html.X().ArrayReader())
                                                )//end reader
                                                 //.ServerProxy(Html.X().AjaxProxy().Url(Url.Action("Get_BatchLogPending")))
                                            )//end  store
                                           .ColumnModel(
                                             Html.X().Column().Text("Month").DataIndex("For_Month").Width(100),
                                            Html.X().Column().Text("Year").DataIndex("For_Year").Width(100),
                                            Html.X().Column().Text("Employer Name").DataIndex("Employer_Name").Width(400),
                                            Html.X().Column().Text("Scheme Name").DataIndex("Scheme_Name").Width(400),
                                            Html.X().Column().Text("Employer Id").DataIndex("Employer_Id").Width(90),
                                            Html.X().Column().Text("Total Contribution").DataIndex("Total_Contribution").Width(130),
                                            Html.X().Column().Text("Total Member").DataIndex("Total_Contribute").Width(120),                                           
                                            Html.X().Column().Text("Log Status").DataIndex("Log_Status").Width(100),
                                             Html.X().Column().Text("ES ID").DataIndex("ES_Id").Width(100)



                                            )//end columnmodel
                                    .View(Html.X().GridView().StripeRows(true).TrackOver(true))
                                    .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { this.up('form').getForm().loadRecord(selected[0]); }")
                                    .DirectEvents(de =>
                                    {
                                        de.CellClick.Url = Url.Action("Get_RemittnaceInBatchLogdelete");
                                        de.CellClick.Success = "onSuccessgroup(App.employConlist_grid_delete, result.data);";
                                    })
                                  ) //end rolegridpanel

                        .Items(Html.X().Panel()
                                .ID("DeleteRemit_ContributionController_log_details")
                                .Title("Batch Remittance Details")
                                .Height(350)
                                .AutoScroll(true)
                                .Width(600)
                                .MarginSpec("10 0 0 10")
                                .Items(Html.X().FieldSet()
                                            .ID("DeleteRemit_ContributionControllerfsset_details")
                                            .Height(180)
                                            .MarginSpec("10 0 0 0")
                                            .FieldDefaults(d =>
                                            {
                                                d.LabelWidth = 115;
                                                //d.LabelStyle = "color:black;padding-left:4px;";
                                            })
                                            .Items(Html.X().TextField()
                                                       .ID("DeleteRemit_ContributionControllerEmployer_Name")
                                                        .Name("Employer_Name")
                                                        .FieldLabel("Employer")
                                                        .MarginSpec("3 0 0 0")
                                                        .Width(550)
                                                        .ReadOnly(true),

                                                   Html.X().Hidden()
                                                      .ID("DeleteRemit_ContributionController_Employer_Id")
                                                       .Name("Employer_Id"),

                                                Html.X().Hidden()
                                                       .ID("DeleteRemit_ContributionController_Con_Log_Id")
                                                       .Name("Con_Log_Id")
                                                       .Width(450),
                                                   Html.X().Hidden()
                                                       .ID("DeleteRemit_ContributionController_ES_Id")
                                                       .Name("ES_Id"),
                                                       Html.X().Hidden()
                                                       .ID("ApprovedRemit_ContributionController_Scheme_Id")
                                                       .Name("Scheme_id"),

                                               Html.X().TextField()
                                                           .ID("DeleteRemit_ContributionController_Total_Contribution")
                                                           .Name("Total_Contribution")
                                                           .FieldLabel("Total Contributon")
                                                           .Width(300)
                                                           .MarginSpec("10 0 0 3")
                                                           .ReadOnly(true),
                                               Html.X().TextField()
                                                           .ID("DeleteRemit_ContributionController_Total_Contribute")
                                                           .Name("Total_Contribute")
                                                           .FieldLabel("Total Member")
                                                           .Width(300)
                                                           .MarginSpec("10 0 0 3")
                                                           .ReadOnly(true)
                                                   )
                                       )//end fsset_details

                                )//end items pn_fset



               )//end panel_forgrids


  .Items(Html.X().Panel()
                        .ID("DeleteRemit_ContributionController_frm_employees_contributions")
                        .Title("Employee Remittance List")
                        .Header(true)
                        .Height(720)
                        .Border(true)
                        .Width(770)
                        .MarginSpec("10 0 0 10")

        // second column begins
        .Items(Html.X().GridPanel()
                    .ID("employConlist_grid_delete")
                    .Header(true)
                    .Border(true)
                    .Width(750)
                    .MarginSpec("10 0 0 10")
                    .Height(650)

                    //.HeightSpec("auto")
                    .BodyPadding(5)
                    .AutoScroll(true)

                    .Store(Html.X().Store()
                            .AutoLoad(false)
                            .ID("deleteempconremitance_list_store")
                            .Model(Html.X().Model()
                                .Fields(
                                        new ModelField("Surname", ModelFieldType.String),
                                         new ModelField("first_Name", ModelFieldType.String),
                                        new ModelField("Employee_Id", ModelFieldType.String),
                                        new ModelField("Fund_Name", ModelFieldType.String),
                                        new ModelField("Employee_Con", ModelFieldType.Float),
                                        new ModelField("Employer_Con", ModelFieldType.Float)
                                        /// new ModelField("Employee_Salary", ModelFieldType.String)
                                        )//end fields
                                    )//end model
                                    .Reader(reader =>
                                        reader.Add(Html.X().ArrayReader())
                                    )//end reader
                            )//end  store
                    .ColumnModel(
                            Html.X().Column().Text("Surname").DataIndex("Surname").Width(300),
                             Html.X().Column().Text("First Name").DataIndex("first_Name").Width(250),
                            Html.X().Column().Text("Employee Id").DataIndex("Employee_Id").Width(100),
                             Html.X().Column().Text("Fund Name").DataIndex("Fund_Name").Width(230),
                            Html.X().Column().Text("Employee Contribution").DataIndex("Employee_Con").Width(150),
                            Html.X().Column().Text("Employer Contribution").DataIndex("Employer_Con").Width(150),
                            Html.X().Column().Text("Employee Salary").DataIndex("Employee_Salary").Width(150)
                            //// Html.X().Column().Text("Salary Rate").DataIndex("Employee_Rate").Width(150)

                            )//end columnmodel
                    .View(Html.X().GridView().StripeRows(true).TrackOver(true))
                    .Plugins(Html.X().FilterHeader())
                    //.Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { this.up('form').getForm().loadRecord(selected[0]); }")
                    .Buttons(y.Button()
                                    .Text("Delete Batch Remittance")
                                      .MarginSpec("0 10 40 0")
                                    .Width(250).Icon(Icon.PageSave)
                                    //.Handler("getTasks")
                                    .DirectEvents(dpe =>
                                    {
                                        dpe.Click.Url = Url.Action("DeleteRetmit_Record");
                                        //dpe.Click.Confirmation.ConfirmRequest = true;
                                        dpe.Click.Confirmation.Title = "Delete Remittance Batch List";
                                        dpe.Click.Confirmation.Message = "Delete selected batch ?";

                                    }).Listeners(l => l.Click.Handler = "Ext.net.Mask.show({msg: 'Processing... Please wait.'})"),
                               
                                Html.X().Button()
                                   
                                      .MarginSpec("0 10 40 0")
                                    .Text("Clear")
                                    .Width(90)
                                    .Icon(Icon.ArrowRefresh)
                                    .DirectEvents(de =>
                                    {
                                        de.Click.Url = Url.Action("ClearControls");
                                    })
                              ////.Handler("#{batchstore}.removeAll();")
                              //.Handler("#{emp_list_store}.removeAll();")
                              )// end buttons

            )//end second panel which is grid

    )

  )


)
